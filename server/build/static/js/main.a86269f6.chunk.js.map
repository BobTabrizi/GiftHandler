{"version":3,"sources":["actions/types.js","actions/errorActions.js","helpers/history.js","actions/authActions.js","actions/modalActions.js","components/Modals/RegisterModal.js","components/Modals/PassResetModal.js","components/AuthForms/LoginForm.js","Pages/Login.js","actions/groupActions.js","components/Navigation/SidebarData.js","Routes/PrivateRoute.js","components/Navigation/NavBar.js","components/Groups/GroupComponent.js","actions/itemActions.js","components/Items/ItemDetails.js","components/Items/UserItemDetails.js","components/Items/AddItemCard.js","components/Items/RegistryList.js","actions/imageActions.js","components/Items/CurrencyInput.js","components/Modals/AddItemModal.js","components/Modals/EditItemModal.js","components/Filters/FilterColumn.js","components/Modals/ModalComponents/ConfirmationModal/ModalTypes.js","components/Modals/ConfirmationModal.js","Pages/Dashboard.js","components/Groups/UserList.js","Pages/GroupPage.js","components/Groups/GroupList.js","components/Groups/CreateJoinGroup.js","components/Modals/ModalComponents/EditGroupModal/Menu.js","components/Modals/ModalComponents/EditGroupModal/Passcode.js","components/Modals/ModalComponents/EditGroupModal/Members.js","components/Modals/ModalComponents/EditGroupModal/ConfirmDelete.js","components/Modals/EditGroupModal.js","components/Modals/ModalComponents/AddGroupModal/ModeSelect.js","components/Modals/ModalComponents/AddGroupModal/EventInfo.js","components/Modals/ModalComponents/AddGroupModal/GroupRegister.js","components/Modals/ModalComponents/AddGroupModal/AddSuccess.js","components/Modals/ModalComponents/JoinGroupModal/JoinRegister.js","components/Modals/AddJoinGroupModal.js","Pages/ManageGroup.js","actions/userActions.js","components/Filters/FilterOtherUsers.js","Pages/UserGroupPage.js","Pages/ProfilePage.js","Pages/PasswordReset.js","components/Modals/ModalComponents/FTUEModal/TutorialParts.js","components/Modals/FTUEModals/Tutorial.js","Pages/FTUE.js","Pages/SpecialGroupPage.js","App.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/groupReducer.js","reducers/itemReducer.js","reducers/userReducer.js","reducers/modalReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["GET_ITEMS","ADD_ITEM","ADD_IMAGE","DELETE_ITEM","EDIT_ITEM","SELECT_EDIT_ITEM","UNSELECT_EDIT_ITEM","ITEMS_LOADING","FILTER_ITEM","SET_FILTER_ITEM","CLEAR_FILTER_ITEMS","CLEAR_ITEMS","GET_USERS_GROUPS","GET_GROUP","ADD_GROUP","ADD_GROUP_MEMBER","REMOVE_GROUP_MEMBER","LEAVE_GROUP","SET_ACTIVE_GROUP","SELECT_EDIT_GROUP","UNSELECT_EDIT_GROUP","DELETE_GROUP","USER_GROUPS_LOADING","GET_GROUP_MEMBERS","GROUP_LOADING","GROUP_MEMBERS_LOADING","CLEAR_CURRENT_GROUP","USER_LOADING","USER_LOADED","UPDATE_USER","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","GET_EXT_USER","EXT_USER_LOADING","UPDATE_EXT_USER","SET_ACTIVE_MODAL","SET_MODAL_PAGE","UPDATE_MODAL_DATA","DEACTIVATE_MODAL","returnErrors","message","status","id","type","payload","clearErrors","history","createBrowserHistory","loadUser","dispatch","getState","a","token","auth","axios","get","then","res","data","catch","err","response","updateUser","user","post","UID","name","profileImage","passResetProcess","pid","code","password","Response","passResetRequest","email","setActiveModal","modalType","setModalPage","modalPage","deactivateModal","activePage","updateModalData","Data","RegisterModal","useState","setName","setEmail","setPassword","errors","useSelector","state","error","useDispatch","useEffect","className","onSubmit","e","preventDefault","push","register","placeholder","onChange","target","value","style","width","marginTop","onClick","PassResetModal","ActiveModal","modal","activeModal","errorMsg","reqStatus","setReqStatus","handleSubmit","window","addEventListener","display","LoginForm","ShowRegisterModal","ShowPassModal","login","Login","getGroups","setGroupsLoading","getGroup","groupid","setGroupLoading","getGroupMembers","setGroupMembersLoading","addGroup","GroupDetails","addGroupMember","groupName","passcode","memberID","groupname","userid","assignPartners","GroupParameters","GroupID","unSelectEditGroup","displayEditGroupModal","groupDetails","SidebarData","title","path","icon","cName","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","NavBar","sidebar","setSideBar","showSideBar","Provider","color","fontSize","cursor","map","item","index","textDecoration","GroupComponent","groups","group","length","getItems","UserID","setItemsLoading","addItem","Item","editItem","filterItems","FilterParam","setFilterItem","clearFilterItems","unSelectEditItem","displayEditModal","itemDetails","ItemDetails","handleEditItem","selectEditItem","src","image","height","alt","price","quantity","link","UserItemDetails","GroupType","pageGroup","mode","ItemState","memberItems","filter","StateItem","itemid","href","NewQty","itemData","imageKey","ActionID","handlePurchase","AddItemCard","items","handleAddItem","scrollTo","top","behavior","RegistryList","filteredItems","PageType","addImage","formData","headers","deleteImage","delete","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","inputProps","currencyMask","createNumberMask","mask","AddItemModal","currentGroup","Group","DispModal","itemprice","setItemPrice","itemname","setItemName","itemQuantity","setItemQuantity","itemLink","setItemLink","file","setFile","previewImage","setPreviewImage","postImage","console","log","FormData","append","result","imageInfo","Key","userID","purchased","itemName","files","URL","createObjectURL","accept","htmlFor","includes","idx","indexOf","offset","ASIN","substr","fetch","process","blob","imgFile","File","handleLink","EditItemModal","selectedItem","itemObject","ModalData","ItemID","ItemImage","handleDeleteItem","ModeList","FilterColumn","GroupData","Items","lessFilter","SetLessFilter","moreFilter","SetMoreFilter","lessBtn","setLessBtn","moreBtn","setMoreBtn","searchFilterItem","setSearchFilterItem","avgPrice","SetAvgPrice","activeGroupName","setActiveGroupName","handleGrpChange","values","total","i","Number","substring","replace","toFixed","options","labelField","valueField","margin","textAlign","backgroundColor","dropdownHeight","dropdownGap","searchable","partnerid","partner","searchBy","handleFilterSearch","checked","LowerThan","MoreThan","ModalTypes","Title","Warning","ConfirmationModal","modalData","handleConfirm","groupID","borderRadius","padding","marginLeft","Dashboard","NumItems","showEditModal","getData","position","UserList","members","member","profileimage","GroupPage","setGroupName","match","params","PageInfo","GroupList","FilterType","handleEditGroup","selectEditGroup","role","CreateJoinGroup","handleModal","ModalType","Menu","selectedGroup","handleModalChange","Passcode","setPasscode","displaySuccess","setDisplaySuccess","PassObject","newPass","Members","confirmModal","setConfirmModal","selectedUserID","setSelectedUserID","adminIsPartner","setAdminIsPartner","GroupMembers","groupMembers","handleKick","getMembers","Member","GroupParams","PartnerList","PartnerMap","r1","Math","random","person1","splice","r2","person2","assign","disabled","ConfirmDelete","handleDelete","EditGroupModal","ShowModal","modalComponent","setModalComponent","modalTitle","setModalTitle","handleModalClose","visibility","ModeSelect","eventType","setEventType","defaultChecked","Mode","EventInfo","GroupMode","eventInfo","setEventInfo","Bio","rows","cols","GroupRegister","setErrors","groupMode","resp","AddSuccess","JoinRegister","setError","AddResponse","AddJoinGroupModal","ManageGroup","ShowEditGroupModal","getUser","setExtUserLoading","FilterOtherUsers","userName","setUserName","setImage","UserData","externalUser","UserGroupPage","GID","gid","userInfo","ProfilePage","fileSelected","userObject","marginBottom","PasswordReset","PID","resetCode","setResetCode","newPassword","setNewPassword","msg","SetMsg","PartArray","Tutorial","part","setPart","partIndex","setPartIndex","stepChange","Direction","FTUE","SpecialGroupPage","AuthInfo","description","App","isAuthenticated","exact","initialState","isLoading","loading","combineReducers","action","setItem","removeItem","lowPriceFilter","highPriceFilter","arr","findIndex","x","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a86269f6.chunk.js","sourcesContent":["/*            Items                        */\r\nexport const GET_ITEMS = \"GET_ITEMS\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const ADD_IMAGE = \"ADD_IMAGE\";\r\nexport const DELETE_IMAGE = \"DELETE_IMAGE\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const EDIT_ITEM = \"EDIT_ITEM\";\r\nexport const SELECT_EDIT_ITEM = \"SELECT_EDIT_ITEM\";\r\nexport const UNSELECT_EDIT_ITEM = \"UNSELECT_EDIT_ITEM\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\nexport const PURCHASE_ITEM = \"PURCHASE_ITEM\";\r\nexport const FILTER_ITEM = \"FILTER_ITEM\";\r\nexport const SET_FILTER_ITEM = \"SET_FILTER_ITEM\";\r\nexport const CLEAR_FILTER_ITEMS = \"CLEAR_FILTER_ITEMS\";\r\nexport const CLEAR_ITEMS = \"CLEAR_ITEMS\";\r\n\r\n/*            Groups                      */\r\nexport const GET_USERS_GROUPS = \"GET_GROUPS\";\r\nexport const GET_GROUP = \"GET_GROUP\";\r\nexport const ADD_GROUP = \"ADD_GROUP\";\r\nexport const ADD_GROUP_MEMBER = \"ADD_GROUP_MEMBER\";\r\nexport const REMOVE_GROUP_MEMBER = \"REMOVE_GROUP_MEMBER\";\r\nexport const LEAVE_GROUP = \"LEAVE_GROUP\";\r\nexport const SET_ACTIVE_GROUP = \"SET_ACTIVE_GROUP\";\r\nexport const SELECT_EDIT_GROUP = \"SELECT_EDIT_GROUP\";\r\nexport const UNSELECT_EDIT_GROUP = \"UNSELECT_EDIT_GROUP\";\r\nexport const DELETE_GROUP = \"DELETE_GROUP\";\r\nexport const USER_GROUPS_LOADING = \"GROUPS_LOADING\";\r\nexport const GET_GROUP_MEMBERS = \"GET_GROUP_MEMBERS\";\r\nexport const GROUP_LOADING = \"GROUP_LOADING\";\r\nexport const GROUP_MEMBERS_LOADING = \"GROUP_MEMBERS_LOADING\";\r\nexport const ADD_MEMBER_FAILURE = \"ADD_MEMBER_FAILURE\";\r\nexport const ASSIGN_PARTNERS = \"ASSIGN_PARTNERS\";\r\nexport const CLEAR_CURRENT_GROUP = \"CLEAR_CURRENT_GROUP\";\r\n\r\n/*         Auth/Login/Errors              */\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const PW_RESET_REQ = \"PW_RESET_REQ\";\r\nexport const PW_RESET_REQ_FAIL = \"PW_RESET_REQ_FAIL\";\r\nexport const PW_RESET = \"PW_RESET\";\r\nexport const PW_RESET_FAIL = \"PW_RESET_FAIL\";\r\n\r\n/*              Other Users                 */\r\nexport const GET_EXT_USER = \"GET_EXT_USER\";\r\nexport const EXT_USER_LOADING = \"EXT_USER_LOADING\";\r\nexport const EXT_USER_LOADED = \"EXT_USER_LOADED\";\r\nexport const UPDATE_EXT_USER = \"UPDATE_EXT_USER\";\r\n\r\n/*                Modals                    */\r\nexport const SET_ACTIVE_MODAL = \"SET_ACTIVE_MODAL\";\r\nexport const SET_MODAL_PAGE = \"SET_MODAL_PAGE\";\r\nexport const UPDATE_MODAL_DATA = \"UPDATE_MODAL_DATA\";\r\nexport const DEACTIVATE_MODAL = \"DEACTIVATE_MODAL\";\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\r\n\r\nexport const returnErrors = (message, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { message, status, id },\r\n  };\r\n};\r\n\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"./errorActions\";\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  UPDATE_USER,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  PW_RESET_REQ,\r\n  PW_RESET_REQ_FAIL,\r\n  PW_RESET,\r\n  PW_RESET_FAIL,\r\n} from \"../actions/types\";\r\nimport { history } from \"../helpers/history\";\r\n//Check token and load user\r\nexport const loadUser = () => async (dispatch, getState) => {\r\n  //User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  //Get token from storage\r\n\r\n  let token = \"\";\r\n  if (getState().auth.token) {\r\n    token = getState().auth.token;\r\n  }\r\n\r\n  let response = await axios\r\n    .get(`/api/auth/user?token=${token}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n      return res.data.id;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n\r\n  //Return ID Directly for Group Querying\r\n  //console.log(response);\r\n  return response;\r\n};\r\n\r\n//Register user\r\nexport const register =\r\n  ({ name, email, password }) =>\r\n  (dispatch) => {\r\n    axios\r\n      .post(\"/api/auth/register\", {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n\r\n        /*  Direct to FTUE Page  */\r\n        history.push(\"/welcome\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\r\n        );\r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n        });\r\n      });\r\n  };\r\n\r\nexport const login =\r\n  ({ email, password }) =>\r\n  (dispatch) => {\r\n    axios\r\n      .post(\"/api/auth/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: res.data,\r\n        });\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          returnErrors(\r\n            err.response.data.error.message,\r\n            err.response.status,\r\n            \"LOGIN_FAIL\"\r\n          )\r\n        );\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n        });\r\n      });\r\n  };\r\n\r\nexport const updateUser = (user) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/auth/update\", {\r\n      UID: user.id,\r\n      name: user.name,\r\n      profileImage: user.profileImage,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UPDATE_USER,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n    });\r\n};\r\n\r\nexport const passResetProcess = (pid, code, password) => async (dispatch) => {\r\n  let Response = await axios\r\n    .post(\"/api/auth/processReset\", {\r\n      pid: pid,\r\n      code: code,\r\n      password: password,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: PW_RESET,\r\n        payload: res.data,\r\n      });\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      return err.response;\r\n    });\r\n  return Response;\r\n};\r\n\r\nexport const passResetRequest = (email, pid) => async (dispatch) => {\r\n  let Response = await axios\r\n    .post(\"/api/auth/resetReq\", {\r\n      email: email,\r\n      pid: pid,\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      return err.response;\r\n    });\r\n\r\n  return Response;\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n","import {\r\n  SET_ACTIVE_MODAL,\r\n  UPDATE_MODAL_DATA,\r\n  DEACTIVATE_MODAL,\r\n  SET_MODAL_PAGE,\r\n} from \"./types\";\r\n\r\nexport const setActiveModal = (modalType) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_ACTIVE_MODAL,\r\n    payload: {\r\n      modalType: modalType,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setModalPage = (modalPage) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_MODAL_PAGE,\r\n    payload: modalPage,\r\n  });\r\n};\r\n\r\nexport const deactivateModal = () => (dispatch) => {\r\n  dispatch({\r\n    type: DEACTIVATE_MODAL,\r\n    payload: {\r\n      activePage: null,\r\n      modalType: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateModalData = (Data) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_MODAL_DATA,\r\n    payload: Data,\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../styles/AuthFormStyles/AuthModals.css\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\nimport { register } from \"../../actions/authActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deactivateModal } from \"../../actions/modalActions\";\r\n/**\r\n * @PageLocation Login\r\n * @Component RegisterModal\r\n * @Description Prompts users to register for an account\r\n *\r\n */\r\nexport const RegisterModal = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let errors = useSelector((state) => state.error.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password,\r\n    };\r\n    //Dispatch store and create new user.\r\n    dispatch(register(newUser));\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"RegisterModalBackground\">\r\n        <div className=\"RegisterModalContainer\">\r\n          <h1>Register</h1>\r\n          {errors && <div>{errors}</div>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-inner\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  placeholder=\"Name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"submitButton\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Register\"\r\n                  style={{ width: 250, marginTop: \"1rem\" }}\r\n                />\r\n              </div>\r\n              <div className=\"registerFooter\">\r\n                <div>Already have an account?</div>\r\n                <div\r\n                  className=\"registerButton\"\r\n                  onClick={() => dispatch(deactivateModal())}\r\n                >\r\n                  Login\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../styles/AuthFormStyles/AuthModals.css\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deactivateModal } from \"../../actions/modalActions\";\r\nimport { passResetRequest } from \"../../actions/authActions\";\r\n/**\r\n * @PageLocation Login\r\n * @Component PassResetModal\r\n * @Description Prompts user for an email to send a password reset email.\r\n *\r\n */\r\nexport const PassResetModal = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const ActiveModal = useSelector((state) => state.modal.activeModal.modalType);\r\n  const errorMsg = useSelector((state) => state.error.message);\r\n  const [reqStatus, setReqStatus] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let response = await dispatch(passResetRequest(email));\r\n    if (response.status === 201) {\r\n      setReqStatus(true);\r\n    } else {\r\n      setReqStatus(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n    const handleClick = (e) => {\r\n      if (e.target && e.target.className === \"PassResetModalBackground\") {\r\n        dispatch(deactivateModal());\r\n      }\r\n    };\r\n    if (ActiveModal === \"PassReset\") {\r\n      window.addEventListener(\"click\", handleClick);\r\n    }\r\n  }, [ActiveModal]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"PassResetModalBackground\">\r\n        <div className=\"PassResetContainer\">\r\n          <div className=\"PassResetHeader\">\r\n            <h1>Reset Password</h1>\r\n            <button\r\n              className=\"PassResetCloseBtn\"\r\n              onClick={() => dispatch(deactivateModal())}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          {errorMsg && <div>{errorMsg}</div>}\r\n          <div\r\n            className=\"PassResetBody\"\r\n            style={{ display: reqStatus === true ? \"none\" : \"block\" }}\r\n          >\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-inner\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"submitButton\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    style={{ width: 250, marginTop: \"1rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className=\"PassResetSuccess\"\r\n            style={{ display: reqStatus === true ? \"block\" : \"none\" }}\r\n          >\r\n            Instructions have been sent to the email for reset.\r\n            <button\r\n              className=\"ResetSuccessBtn\"\r\n              onClick={() => dispatch(deactivateModal())}\r\n            >\r\n              OK\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/PageStyles/Login.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\nimport { RegisterModal } from \"../Modals/RegisterModal\";\r\nimport { setActiveModal } from \"../../actions/modalActions\";\r\nimport { PassResetModal } from \"../Modals/PassResetModal\";\r\n\r\n/**\r\n *\r\n * @PageLocation Login\r\n * @Component LoginForm\r\n * @Description Login form that prompts user to login or register\r\n *\r\n */\r\nexport const LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  let errors = useSelector((state) => state.error.message);\r\n  const ShowRegisterModal =\r\n    useSelector((state) => state.modal.activeModal.modalType) ===\r\n    \"RegisterUser\";\r\n  const ShowPassModal =\r\n    useSelector((state) => state.modal.activeModal.modalType) === \"PassReset\";\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = { email, password };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {ShowRegisterModal && <RegisterModal />}\r\n      {ShowPassModal && <PassResetModal />}\r\n\r\n      {!ShowRegisterModal && (\r\n        <div className=\"LoginFormContainer\">\r\n          <h1>Gift Handler</h1>\r\n          {errors && <div>{errors}</div>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-inner\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"submitButton\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"LOGIN\"\r\n                  style={{ width: 250, marginTop: \"1rem\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"registerFooter\">\r\n              <div>Don't have an account?</div>\r\n              <div\r\n                className=\"registerButton\"\r\n                onClick={() => dispatch(setActiveModal(\"RegisterUser\"))}\r\n              >\r\n                Register\r\n              </div>\r\n              <div\r\n                className=\"passResetReqBtn\"\r\n                onClick={() => dispatch(setActiveModal(\"PassReset\"))}\r\n              >\r\n                Forgot your password?\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/PageStyles/Login.css\";\r\nimport { LoginForm } from \"../components/AuthForms/LoginForm\";\r\n\r\n/**\r\n *\r\n * @Page Login Page\r\n * @Description Log in the User or send to register page.\r\n * @route /login\r\n *\r\n */\r\nexport const Login = () => {\r\n  return (\r\n    <>\r\n      <div className=\"LoginContainer\">\r\n        <LoginForm />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_USERS_GROUPS,\r\n  GET_GROUP,\r\n  GROUP_LOADING,\r\n  ADD_GROUP,\r\n  SET_ACTIVE_GROUP,\r\n  REMOVE_GROUP_MEMBER,\r\n  LEAVE_GROUP,\r\n  SELECT_EDIT_GROUP,\r\n  UNSELECT_EDIT_GROUP,\r\n  DELETE_GROUP,\r\n  USER_GROUPS_LOADING,\r\n  ADD_GROUP_MEMBER,\r\n  GET_GROUP_MEMBERS,\r\n  GROUP_MEMBERS_LOADING,\r\n  ADD_MEMBER_FAILURE,\r\n  ASSIGN_PARTNERS,\r\n  CLEAR_CURRENT_GROUP,\r\n} from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nexport const getGroups = (id) => (dispatch) => {\r\n  dispatch(setGroupsLoading());\r\n  axios\r\n    .get(`/api/groups/user?userid=${id}`, {})\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_USERS_GROUPS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const getGroup = (groupid) => async (dispatch) => {\r\n  dispatch(setGroupLoading());\r\n  let response = await axios\r\n    .get(`/api/groups?groupid=${groupid}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_GROUP,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n  return response;\r\n};\r\n\r\nexport const getGroupMembers = (groupid) => async (dispatch) => {\r\n  dispatch(setGroupMembersLoading());\r\n  let response = await axios\r\n    .get(`/api/groups/members?groupid=${groupid}`, {})\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_GROUP_MEMBERS,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n\r\n  //console.log(response);\r\n  return response;\r\n};\r\n\r\nexport const addGroup = (GroupDetails) => async (dispatch) => {\r\n  let Response = await axios\r\n    .post(\"/api/groups/create\", {\r\n      GroupDetails,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_GROUP,\r\n        payload: res.data,\r\n      });\r\n      return \"Success\";\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      return err.response.data;\r\n    });\r\n\r\n  return Response;\r\n};\r\n\r\nexport const addGroupMember =\r\n  (groupName, passcode, memberID) => async (dispatch) => {\r\n    let Response = await axios\r\n      .post(\"/api/groups/users\", {\r\n        groupname: groupName,\r\n        passcode: passcode,\r\n        userid: memberID,\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: ADD_GROUP_MEMBER,\r\n          payload: res.data,\r\n        });\r\n        return \"Success\";\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        return err.response.data;\r\n      });\r\n\r\n    return Response;\r\n  };\r\n\r\nexport const removeGroupMember = (GroupID, UserID) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/groups/removeUser\", {\r\n      groupID: GroupID,\r\n      userID: UserID,\r\n    })\r\n    .then(\r\n      dispatch({\r\n        type: REMOVE_GROUP_MEMBER,\r\n        payload: UserID,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const setActiveGroup = (Group) => (dispatch) => {\r\n  dispatch({\r\n    type: SET_ACTIVE_GROUP,\r\n    payload: {\r\n      Group: Group,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteGroup = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/groups/delete?groupid=${id}`)\r\n    .then(\r\n      dispatch({\r\n        type: DELETE_GROUP,\r\n        payload: id,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const leaveGroup = (groupID, userID) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/groups/removeUser\", {\r\n      groupID: groupID,\r\n      userID: userID,\r\n    })\r\n    .then(\r\n      dispatch({\r\n        type: LEAVE_GROUP,\r\n        payload: groupID,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const assignPartners = (GroupParameters) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/groups/assignPartners\", {\r\n      GroupParameters,\r\n    })\r\n    .then(() => {\r\n      dispatch({\r\n        type: ASSIGN_PARTNERS,\r\n        payload: GroupParameters,\r\n      });\r\n\r\n      dispatch(getGroupMembers(GroupParameters.GroupID));\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const setGroupsLoading = () => {\r\n  return {\r\n    type: USER_GROUPS_LOADING,\r\n  };\r\n};\r\n\r\nexport const setGroupLoading = () => {\r\n  return {\r\n    type: GROUP_LOADING,\r\n  };\r\n};\r\n\r\nexport const setGroupMembersLoading = () => {\r\n  return {\r\n    type: GROUP_MEMBERS_LOADING,\r\n  };\r\n};\r\n\r\nexport const selectEditGroup = (group) => (dispatch) => {\r\n  dispatch({\r\n    type: SELECT_EDIT_GROUP,\r\n    payload: {\r\n      displayEditGroupModal: true,\r\n      groupDetails: group,\r\n    },\r\n  });\r\n};\r\n\r\nexport const unSelectEditGroup = () => (dispatch) => {\r\n  dispatch({\r\n    type: UNSELECT_EDIT_GROUP,\r\n    payload: {\r\n      displayEditGroupModal: false,\r\n      groupDetails: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const clearCurrentGroup = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_GROUP,\r\n    payload: {\r\n      Group: {\r\n        id: null,\r\n        name: null,\r\n        groupname: null,\r\n        role: null,\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\n\r\n/**\r\n *\r\n * @PageLocation All Pages aside from login/register\r\n * @Component SideBarData\r\n * @Description Content for Nav sidebar, links to pages and potentially icons\r\n *\r\n */\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Home\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: \"nav-text\",\r\n  },\r\n  {\r\n    title: \"Groups\",\r\n    path: \"/managegroups\",\r\n    icon: <IoIcons.IoMdPeople />,\r\n    cName: \"nav-text\",\r\n  },\r\n  {\r\n    title: \"Profile\",\r\n    path: \"/profile\",\r\n    icon: <IoIcons.IoMdPeople />,\r\n    cName: \"nav-text\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return localStorage.getItem(\"token\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/NavigationStyles/NavBar.css\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport { IconContext } from \"react-icons\";\r\nimport PrivateRoute from \"../../Routes/PrivateRoute\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../actions/authActions\";\r\n\r\n/**\r\n *\r\n * @PageLocation All Pages aside from login/register\r\n * @Component NavBar\r\n * @Description Navigation Bar at the top of each page with sidebar.\r\n *              Title indicates the current page.\r\n *\r\n */\r\nexport default function NavBar({ title }) {\r\n  const [sidebar, setSideBar] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  const showSideBar = () => setSideBar(!sidebar);\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"white\" }}>\r\n        <div className=\"navBar\" style={{ color: \"white\" }}>\r\n          <Link to=\"#\" className=\"menu-bars\">\r\n            <FaIcons.FaBars onClick={showSideBar} />\r\n          </Link>\r\n          <div className=\"navText\" style={{ fontSize: 25 }}>\r\n            {title}\r\n          </div>\r\n        </div>\r\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\">\r\n            <li className=\"navbar-toggle\" onClick={showSideBar}>\r\n              <AiIcons.AiOutlineClose style={{ cursor: \"pointer\" }} />\r\n            </li>\r\n            {SidebarData.map((item, index) => {\r\n              return (\r\n                <Link\r\n                  to={item.path}\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <li key={index} className={item.cName} onClick={showSideBar}>\r\n                    <div className=\"sidebarItem\">{item.title}</div>\r\n                  </li>\r\n                </Link>\r\n              );\r\n            })}\r\n            <hr />\r\n            <Link\r\n              to=\"/login\"\r\n              onClick={handleLogout}\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              <li className=\"nav-text\">\r\n                <div className=\"sidebarItem\">Sign Out</div>\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../styles/PageStyles/Dashboard.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component GroupComponent\r\n * @Description  Handles active group for the user\r\n *\r\n */\r\nexport const GroupComponent = () => {\r\n  const groups = useSelector((state) => state.group.groups);\r\n  return (\r\n    <>\r\n      {groups && groups.length === 0 && (\r\n        <Link\r\n          to={`/managegroups`}\r\n          style={{\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <div className=\"NullGroupPrompt\">Join Or Create a Group!</div>\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ITEMS,\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  EDIT_ITEM,\r\n  SELECT_EDIT_ITEM,\r\n  UNSELECT_EDIT_ITEM,\r\n  ITEMS_LOADING,\r\n  PURCHASE_ITEM,\r\n  FILTER_ITEM,\r\n  SET_FILTER_ITEM,\r\n  CLEAR_FILTER_ITEMS,\r\n  CLEAR_ITEMS,\r\n} from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nexport const getItems = (UserID, GroupID) => async (dispatch) => {\r\n  dispatch(setItemsLoading());\r\n  let response = await axios\r\n    .get(`/api/items/user?userid=${UserID}&groupid=${GroupID}`, {})\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n  return response;\r\n};\r\n\r\nexport const addItem = (Item) => (dispatch) => {\r\n  axios\r\n    .post(`/api/items/add`, {\r\n      Item,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_ITEM,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deleteItem = (id, Key) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/items/delete?itemid=${id}&itemKey=${Key}`)\r\n    .then((res) => {})\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n\r\n  //Place here at the moment, for some reason axios then block is being skipped\r\n  dispatch({\r\n    type: DELETE_ITEM,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const editItem = (item) => (dispatch) => {\r\n  axios\r\n    .post(`/api/items/edit`, {\r\n      item: item,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: EDIT_ITEM,\r\n        payload: {\r\n          payload: res.data,\r\n        },\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const purchaseItem = (item) => (dispatch) => {\r\n  axios\r\n    .post(`/api/items/purchase`, {\r\n      item: item,\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: PURCHASE_ITEM,\r\n        payload: {\r\n          payload: res.data,\r\n        },\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const filterItems = (FilterParam) => {\r\n  return {\r\n    type: FILTER_ITEM,\r\n    payload: {\r\n      FilterParam: FilterParam,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setFilterItem = (item) => {\r\n  return {\r\n    type: SET_FILTER_ITEM,\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const clearFilterItems = () => {\r\n  return {\r\n    type: CLEAR_FILTER_ITEMS,\r\n    payload: null,\r\n  };\r\n};\r\n\r\nexport const clearItems = () => {\r\n  return {\r\n    type: CLEAR_ITEMS,\r\n    payload: null,\r\n  };\r\n};\r\nexport const selectEditItem = (item) => (dispatch) => {\r\n  dispatch({\r\n    type: SELECT_EDIT_ITEM,\r\n    payload: {\r\n      displayEditModal: true,\r\n      itemDetails: item,\r\n    },\r\n  });\r\n};\r\n\r\nexport const unSelectEditItem = () => (dispatch) => {\r\n  dispatch({\r\n    type: UNSELECT_EDIT_ITEM,\r\n    payload: {\r\n      displayEditModal: false,\r\n      itemDetails: null,\r\n    },\r\n  });\r\n};\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"../../styles/ItemStyles/RegistryItem.css\";\r\nimport { deleteItem } from \"../../actions/itemActions\";\r\nimport { selectEditItem } from \"../../actions/itemActions\";\r\n\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component UserItemDetails\r\n * @Description Displays Registry Items for the current user on the dashboard.\r\n *              Functionality to edit and delete registry items.\r\n *\r\n */\r\nexport const ItemDetails = (item) => {\r\n  const dispatch = useDispatch();\r\n  const handleEditItem = () => {\r\n    dispatch(selectEditItem(item));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"ItemDetailContainer\" onClick={() => handleEditItem()}>\r\n        <div className=\"ItemImage\">\r\n          <img\r\n            src={`/api/images/${item.image}`}\r\n            style={{ width: \"100%\", height: \"100%\", display: \"block\" }}\r\n            alt=\"Registry Item\"\r\n          ></img>\r\n        </div>\r\n        <div className=\"ListItemName\">{item.name}</div>\r\n        <hr style={{ width: \"100%\" }} />\r\n        <div className=\"ListItemPrice\">Price: {item.price}</div>\r\n        <div className=\"ListItemQuant\">Quantity: {item.quantity}</div>\r\n        {item.link && <p>Purchase Link</p>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../../styles/ItemStyles/RegistryItem.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editItem } from \"../../actions/itemActions\";\r\nimport { setActiveModal, updateModalData } from \"../../actions/modalActions\";\r\n/**\r\n * @PageLocation UserGroupPage\r\n * @Component UserItemDetails\r\n * @Description Displays Registry Items for other users.\r\n *              Functionality to allow purchase of items\r\n *\r\n */\r\nexport const UserItemDetails = (item) => {\r\n  const GroupType = useSelector((state) => state.group.pageGroup.mode);\r\n  const ItemState = useSelector((state) =>\r\n    state.item.memberItems.filter(\r\n      (StateItem) => StateItem.itemid === item.itemid\r\n    )\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePurchase = () => {\r\n    let NewQty = ItemState[0].quantity;\r\n    if (NewQty >= 0) {\r\n      NewQty--;\r\n    }\r\n    let itemData = {\r\n      itemid: item.itemid,\r\n      price: item.price,\r\n      quantity: NewQty,\r\n      link: item.link,\r\n      imageKey: item.image,\r\n      name: item.name,\r\n    };\r\n\r\n    let ModalData = {\r\n      ActionID: 2,\r\n      item: itemData,\r\n    };\r\n\r\n    dispatch(updateModalData(ModalData));\r\n    dispatch(setActiveModal(\"Confirm\"));\r\n\r\n    // dispatch(editItem(itemObject));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"ItemContainer\">\r\n        {ItemState[0].quantity === 0 && (\r\n          <div className=\"PurchasedItem\">\r\n            <div className=\"PurchasedItemText\">Item Purchased</div>\r\n          </div>\r\n        )}\r\n        <div className=\"ItemDetailContainer\">\r\n          <div className=\"ItemImage\">\r\n            <img\r\n              src={`/api/images/${item.image}`}\r\n              style={{ width: \"100%\", height: \"100%\", display: \"block\" }}\r\n              alt=\"Registry Item\"\r\n            ></img>\r\n          </div>\r\n          <div className=\"ListItemName\">{item.name}</div>\r\n          <hr style={{ width: \"100%\" }} />\r\n          <div className=\"ListItemPrice\">Price: {item.price}</div>\r\n          <div className=\"ListItemQuant\">Quantity: {ItemState[0].quantity}</div>\r\n          {item.link && (\r\n            <a className=\"PurchaseLink\" href={item.link}>\r\n              Purchase Link\r\n            </a>\r\n          )}\r\n          {GroupType === 1 && (\r\n            <button className=\"PurchaseBtn\" onClick={() => handlePurchase()}>\r\n              Purchase\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../../styles/ItemStyles/RegistryItem.css\";\r\nimport { setActiveModal } from \"../../actions/modalActions\";\r\nimport { IoAdd } from \"react-icons/io5\";\r\n\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component PlaceHolderAddItem\r\n * @Description Add Item button for the user dashboard.\r\n *              Opens modal to add an item to a registry list.\r\n *\r\n */\r\nexport const AddItemCard = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector((state) => state.item.memberItems);\r\n  const handleAddItem = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    dispatch(setActiveModal(\"AddItem\"));\r\n  };\r\n  return (\r\n    <>\r\n      {items && items.length !== 0 && (\r\n        <div className=\"AddItemCard\" onClick={() => handleAddItem()}>\r\n          <div className=\"ItemName\">ADD NEW ITEM</div>\r\n          <IoAdd style={{ fontSize: 150, color: \"gray\" }} />\r\n        </div>\r\n      )}\r\n\r\n      {(!items || items.length === 0) && (\r\n        <>\r\n          <div\r\n            className=\"AddItemCard\"\r\n            onClick={() => handleAddItem()}\r\n            style={{ width: \"14%\" }}\r\n          >\r\n            <div className=\"ItemName\">Start by adding an item</div>\r\n            <IoAdd style={{ fontSize: 150, color: \"gray\" }} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../styles/ItemStyles/RegistryItem.css\";\r\nimport { ItemDetails } from \"./ItemDetails\";\r\nimport { UserItemDetails } from \"./UserItemDetails\";\r\nimport { AddItemCard } from \"./AddItemCard\";\r\n\r\n/**\r\n *\r\n * @PageLocation Dashboard / UserGroupPage\r\n * @Component RegistryList\r\n * @Description Wrapper Component of Registry Items.\r\n *              Takes in a page type as a parameter and returns the appropriate list component.\r\n *              Dashboard items allow for editing and deletion, page items allow for purchase\r\n *\r\n */\r\nexport const RegistryList = (props) => {\r\n  const items = useSelector((state) => state.item.memberItems);\r\n  const filteredItems = useSelector((state) => state.item.filteredItems);\r\n\r\n  //Seperate Item functionalities based on page.\r\n  //Allow editing/Deleting on user Dashboard\r\n  //Allow Item purchase on user page\r\n\r\n  if (props.PageType === \"Dashboard\") {\r\n    return (\r\n      <>\r\n        <div className=\"ItemListContainer\">\r\n          {!filteredItems && (\r\n            <>\r\n              <AddItemCard />\r\n\r\n              {items &&\r\n                items.map((item, index) => (\r\n                  <div className=\"ItemContainer\" key={index}>\r\n                    <ItemDetails {...item} />\r\n                  </div>\r\n                ))}\r\n            </>\r\n          )}\r\n\r\n          {filteredItems &&\r\n            filteredItems.map((item, index) => (\r\n              <div className=\"ItemContainer\" key={index}>\r\n                <ItemDetails {...item} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"ItemListContainer\">\r\n          {!filteredItems && (\r\n            <>\r\n              {items &&\r\n                items.map((item, index) => (\r\n                  <>\r\n                    <UserItemDetails {...item} />\r\n                  </>\r\n                ))}\r\n            </>\r\n          )}\r\n          {filteredItems && (\r\n            <>\r\n              {filteredItems &&\r\n                filteredItems.map((item, index) => (\r\n                  <>\r\n                    <UserItemDetails {...item} />\r\n                  </>\r\n                ))}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { ADD_IMAGE, DELETE_IMAGE } from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nexport const addImage = (formData) => async (dispatch) => {\r\n  let response = await axios\r\n    .post(\"/api/images/create\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_IMAGE,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n  // console.log(response);\r\n  return response;\r\n};\r\n\r\nexport const deleteImage = (imageKey) => async (dispatch) => {\r\n  let response = await axios\r\n    .delete(`/api/images/delete?imageKey=${imageKey}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: DELETE_IMAGE,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n  // console.log(response);\r\n  return response;\r\n};\r\n","import React from \"react\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport createNumberMask from \"text-mask-addons/dist/createNumberMask\";\r\n\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component CurrencyInput\r\n * @Description Formats and handles price inputting when editing/adding items\r\n *\r\n */\r\n\r\nconst defaultMaskOptions = {\r\n  prefix: \"$\",\r\n  suffix: \"\",\r\n  includeThousandsSeparator: true,\r\n  thousandsSeparatorSymbol: \",\",\r\n  allowDecimal: true,\r\n  decimalSymbol: \".\",\r\n  decimalLimit: 2,\r\n  integerLimit: 7,\r\n  allowNegative: false,\r\n  allowLeadingZeroes: false,\r\n};\r\nconst CurrencyInput = ({ ...inputProps }) => {\r\n  const currencyMask = createNumberMask({\r\n    ...defaultMaskOptions,\r\n  });\r\n\r\n  return <MaskedInput mask={currencyMask} {...inputProps} />;\r\n};\r\n\r\nexport default CurrencyInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/ItemStyles/ItemModals.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addItem } from \"../../actions/itemActions\";\r\nimport { addImage } from \"../../actions/imageActions\";\r\nimport CurrencyInput from \"../Items/CurrencyInput\";\r\nimport { deactivateModal } from \"../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component EditItemModal\r\n * @Description Modal that allows a user to edit attributes of an item\r\n *\r\n */\r\nexport const AddItemModal = () => {\r\n  const id = useSelector((state) => state.auth.user.id);\r\n  const GroupID = useSelector((state) => state.group.currentGroup.Group.id);\r\n  const DispModal = useSelector((state) => state.modal.activeModal.modalType);\r\n  const [itemprice, setItemPrice] = useState(0.0);\r\n  const [itemname, setItemName] = useState(\"New Item\");\r\n  const [itemQuantity, setItemQuantity] = useState(1);\r\n  const [itemLink, setItemLink] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [previewImage, setPreviewImage] = useState(`/api/images/DefaultItem`);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLink = (e) => {\r\n    setItemLink(e);\r\n    /*     Check to see if link is an amazon link, if it is, try to parse for the ASIN to pull an image      */\r\n    if (e.includes(\"amazon.com/\")) {\r\n      try {\r\n        //Most common prefix for ASIN is /dp/\r\n        let idx = e.indexOf(\"/dp/\");\r\n        let offset = 4;\r\n\r\n        //Another prefix is /gp/\r\n        if (idx === -1) {\r\n          idx = e.indexOf(\"/gp/\");\r\n          offset = 12;\r\n        }\r\n\r\n        //Extract ASIN with varying offset based on the prefix\r\n        let ASIN = e.substr(idx + offset, 10);\r\n\r\n        //Double check the ASIN is a valid length 10 string and use a heroku CORS proxy to fetch image client side\r\n        if (ASIN.length === 10) {\r\n          fetch(\r\n            `${process.env.REACT_APP_HEROKU_CORS_PROXY}https://ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&MarketPlace=US&ASIN=${ASIN}&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=SL250`\r\n          )\r\n            .then((res) => res.blob())\r\n            .then((blob) => {\r\n              //Convert Blob to file for storage into S3\r\n              var imgFile = new File([blob], \"image\");\r\n              setFile(imgFile);\r\n              setPreviewImage(URL.createObjectURL(blob));\r\n            });\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  /*  Add Event listener to close modal on background click      */\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (e.target && e.target.className === \"ItemModalBackground\") {\r\n        dispatch(deactivateModal());\r\n      }\r\n    };\r\n    if (DispModal === \"AddItem\") {\r\n      window.addEventListener(\"click\", handleClick);\r\n    }\r\n  }, [DispModal]);\r\n\r\n  /*  Upon File Input, set file state and display a preview image  */\r\n  const fileSelected = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    setPreviewImage(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  /*      Save image to S3             */\r\n  const postImage = async ({ image }) => {\r\n    console.log(image);\r\n    let formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    const result = await dispatch(addImage(formData));\r\n    return result;\r\n  };\r\n\r\n  /*    Exit modal entirely     */\r\n  const handleModalClose = () => {\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  /*   Handle Addition of the item */\r\n  const handleSubmit = async () => {\r\n    let imageKey = \"DefaultItem\";\r\n    //If file uploaded, add to S3\r\n    if (file) {\r\n      const imageInfo = await postImage({ image: file });\r\n      imageKey = imageInfo.Key;\r\n    }\r\n\r\n    let newItem = {\r\n      userID: id,\r\n      price: itemprice,\r\n      quantity: itemQuantity,\r\n      link: itemLink,\r\n      purchased: false,\r\n      imageKey: imageKey,\r\n      itemName: itemname,\r\n      GroupID: GroupID,\r\n    };\r\n    //Then store the item attributes and Image key in DB\r\n    dispatch(addItem(newItem));\r\n    handleModalClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ItemModalBackground\">\r\n        <div className=\"ItemModalContainer\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"imageUpload\"\r\n            style={{ display: \"none\" }}\r\n            onChange={fileSelected}\r\n            accept=\"image/*\"\r\n          ></input>\r\n          <label htmlFor=\"imageUpload\" className=\"NewImageBtn\">\r\n            <div className=\"ImageContainer\">\r\n              <div className=\"content\">\r\n                <div className=\"content-overlay\"></div>\r\n                <img\r\n                  className=\"content-image\"\r\n                  src={previewImage}\r\n                  style={{ width: \"100%\", height: \"100%\", display: \"block\" }}\r\n                  alt=\"Registry Item\"\r\n                ></img>\r\n                <div className=\"content-details fadeIn-top\">\r\n                  <h3>Choose a new photo</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <div className=\"ItemName\">\r\n            <input\r\n              className=\"ItemModalInputName\"\r\n              placeholder=\"New Item\"\r\n              onChange={(e) => setItemName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <hr style={{ width: \"100%\" }} />\r\n          <div className=\"ItemPrice\">\r\n            <div className=\"ItemModalBodyLabel\">Price:</div>\r\n            <CurrencyInput\r\n              className=\"ItemModalInputPrice\"\r\n              placeholder=\"0.00\"\r\n              onChange={(e) => setItemPrice(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"ItemQuant\">\r\n            <div className=\"ItemModalBodyLabel\">Quantity:</div>\r\n            <input\r\n              className=\"ItemModalInputPrice\"\r\n              placeholder=\"1\"\r\n              onChange={(e) => setItemQuantity(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"ItemLink\">\r\n            <div className=\"ItemModalBodyLabel\">Link:</div>\r\n            <input\r\n              className=\"ItemModalInputPrice\"\r\n              placeholder=\"Purchase Link\"\r\n              onChange={(e) => handleLink(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <button className=\"ItemModalSubmitBtn\" onClick={() => handleSubmit()}>\r\n            Add Item\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/ItemStyles/ItemModals.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editItem } from \"../../actions/itemActions\";\r\nimport { deleteItem } from \"../../actions/itemActions\";\r\nimport { addImage, deleteImage } from \"../../actions/imageActions\";\r\nimport CurrencyInput from \"../Items/CurrencyInput\";\r\nimport { unSelectEditItem } from \"../../actions/itemActions\";\r\nimport { setActiveModal, updateModalData } from \"../../actions/modalActions\";\r\n\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component EditItemModal\r\n * @Description Modal that allows a user to edit attributes of an item\r\n *\r\n */\r\nexport const EditItemModal = () => {\r\n  const id = useSelector((state) => state.auth.user.id);\r\n  const item = useSelector((state) => state.item.selectedItem.itemDetails);\r\n  const DispModal = useSelector(\r\n    (state) => state.item.selectedItem.displayEditModal\r\n  );\r\n  const [itemprice, setItemPrice] = useState(item.price);\r\n  const [itemname, setItemName] = useState(item.name);\r\n  const [itemQuantity, setItemQuantity] = useState(item.quantity);\r\n  const [itemLink, setItemLink] = useState(item.link);\r\n  const [file, setFile] = useState(null);\r\n  const [previewImage, setPreviewImage] = useState(`/api/images/${item.image}`);\r\n  const dispatch = useDispatch();\r\n\r\n  /*  Upon File Input, set file state and display a preview image  */\r\n  const fileSelected = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    setPreviewImage(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  /*  Add Event listener to close modal on background click      */\r\n  useEffect(() => {\r\n    const handleClick = (e) => {\r\n      if (e.target && e.target.className === \"ItemModalBackground\") {\r\n        dispatch(unSelectEditItem());\r\n      }\r\n    };\r\n    if (DispModal) {\r\n      window.addEventListener(\"click\", handleClick);\r\n    }\r\n  }, [DispModal]);\r\n\r\n  /*      Delete old image and save new image to S3       */\r\n  const postImage = async ({ image }) => {\r\n    //First delete the old image if its not the default\r\n    if (item.image !== \"DefaultItem\") {\r\n      dispatch(deleteImage(item.image));\r\n    }\r\n\r\n    //Then add the new image\r\n    let formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    const result = await dispatch(addImage(formData));\r\n    return result;\r\n  };\r\n\r\n  /*    Exit modal entirely     */\r\n  const handleModalClose = () => {\r\n    dispatch(unSelectEditItem());\r\n  };\r\n\r\n  /*  Handle Deletion of selected item */\r\n  const handleDeleteItem = () => {\r\n    let ModalData = {\r\n      ActionID: 1,\r\n      ItemID: item.itemid,\r\n      ItemImage: item.image,\r\n    };\r\n    dispatch(updateModalData(ModalData));\r\n    dispatch(setActiveModal(\"Confirm\"));\r\n  };\r\n\r\n  /*   Handle Edit of the item */\r\n  const handleSubmit = async () => {\r\n    let imageKey = item.image;\r\n    //If the image was changed, delete and update images in S3\r\n    if (file) {\r\n      const imageInfo = await postImage({ image: file });\r\n      imageKey = imageInfo.Key;\r\n    }\r\n    // Then update the item in DB\r\n    let itemObject = {\r\n      itemid: item.itemid,\r\n      price: itemprice,\r\n      quantity: itemQuantity,\r\n      link: itemLink,\r\n      imageKey: imageKey,\r\n      name: itemname,\r\n    };\r\n    dispatch(editItem(itemObject));\r\n    //Exit Modal\r\n    dispatch(unSelectEditItem());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ItemModalBackground\">\r\n        <div className=\"ItemModalContainer\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"imageUpload\"\r\n            style={{ display: \"none\" }}\r\n            onChange={fileSelected}\r\n            accept=\"image/*\"\r\n          ></input>\r\n          <label htmlFor=\"imageUpload\" className=\"NewImageBtn\">\r\n            <div className=\"ImageContainer\">\r\n              <div className=\"content\">\r\n                <div className=\"content-overlay\"></div>\r\n                <img\r\n                  className=\"content-image\"\r\n                  src={previewImage}\r\n                  style={{ width: \"100%\", height: \"100%\", display: \"block\" }}\r\n                  alt=\"Registry Item\"\r\n                ></img>\r\n                <div className=\"content-details fadeIn-top\">\r\n                  <h3>Choose a new photo</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <div className=\"ItemName\">\r\n            <input\r\n              className=\"ItemModalInputName\"\r\n              placeholder={`${item.name}`}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <hr style={{ width: \"100%\" }} />\r\n          <div className=\"ItemPrice\">\r\n            <div className=\"ItemModalBodyLabel\">Price:</div>\r\n            <CurrencyInput\r\n              className=\"ItemModalInputPrice\"\r\n              placeholder={`${item.price}`}\r\n              onChange={(e) => setItemPrice(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"ItemQuant\">\r\n            <div className=\"ItemModalBodyLabel\">Quantity:</div>\r\n            <input\r\n              className=\"ItemModalInputPrice\"\r\n              placeholder={`${item.quantity}`}\r\n              onChange={(e) => setItemQuantity(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"ItemLink\">\r\n            <div className=\"ItemModalBodyLabel\">Link:</div>\r\n            <input\r\n              className=\"ItemModalInputPrice\"\r\n              placeholder={`${item.link}`}\r\n              onChange={(e) => setItemLink(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <button className=\"ItemModalSubmitBtn\" onClick={() => handleSubmit()}>\r\n            SAVE CHANGES\r\n          </button>\r\n          <button\r\n            className=\"ItemModalDeleteBtn\"\r\n            onClick={() => handleDeleteItem()}\r\n          >\r\n            DELETE ITEM\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/FilterStyles/FilterColumn.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-dropdown-select\";\r\nimport CurrencyInput from \"../Items/CurrencyInput\";\r\nimport { clearFilterItems, filterItems } from \"../../actions/itemActions\";\r\nimport { setFilterItem } from \"../../actions/itemActions\";\r\nimport { setActiveGroup } from \"../../actions/groupActions\";\r\nimport { getItems } from \"../../actions/itemActions\";\r\nimport { Link } from \"react-router-dom\";\r\n/**\r\n *\r\n * @PageLocation Dashboard\r\n * @Component FilterColumn\r\n * @Description Allows use to filter items\r\n *\r\n */\r\n\r\nconst ModeList = {\r\n  0: \"Secret Santa\",\r\n  1: \"Wedding\",\r\n  2: \"Other\",\r\n};\r\nexport const FilterColumn = () => {\r\n  const GroupData = useSelector((state) => state.group.currentGroup.Group);\r\n  const groups = useSelector((state) => state.group.groups);\r\n  const Items = useSelector((state) => state.item.memberItems);\r\n  const UID = useSelector((state) => state.auth.user.id);\r\n  const [lessFilter, SetLessFilter] = useState(0.0);\r\n  const [moreFilter, SetMoreFilter] = useState(0.0);\r\n  const [lessBtn, setLessBtn] = useState(false);\r\n  const [moreBtn, setMoreBtn] = useState(false);\r\n  const [searchFilterItem, setSearchFilterItem] = useState([]);\r\n  const [avgPrice, SetAvgPrice] = useState(0);\r\n  const [activeGroupName, setActiveGroupName] = useState(\"Select a Group\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleGrpChange = (values) => {\r\n    if (values.length > 0) {\r\n      dispatch(setActiveGroup(values[0]));\r\n      let GroupID = values[0].id;\r\n      dispatch(getItems(UID, GroupID));\r\n      setActiveGroupName(values[0].name);\r\n    }\r\n  };\r\n\r\n  const handleFilterItems = () => {\r\n    //Pass the filtered values as params only if the corresponding button is checked.\r\n    //Otherwise send a null value.\r\n\r\n    let FilterParams = {\r\n      LowerThan: lessBtn ? lessFilter : null,\r\n      MoreThan: moreBtn ? moreFilter : null,\r\n    };\r\n\r\n    dispatch(filterItems(FilterParams));\r\n  };\r\n\r\n  const handleFilterSearch = (values) => {\r\n    setSearchFilterItem(values);\r\n    if (values.length !== 0) {\r\n      dispatch(setFilterItem(values[0]));\r\n    }\r\n  };\r\n\r\n  const handleSearchClear = () => {\r\n    dispatch(clearFilterItems());\r\n    setSearchFilterItem([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n    if (Items) {\r\n      for (let i = 0; i < Items.length; i++) {\r\n        total += Number(Items[i].price.substring(1).replace(/,/g, \"\"));\r\n      }\r\n      SetAvgPrice((total / Items.length).toFixed(2));\r\n    }\r\n  }, [Items]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"FilterColumnBackground\">\r\n        <div className=\"FilterColContainer\">\r\n          <div className=\"GroupInfo\">\r\n            <div className=\"FilterColHeader\">\r\n              Current Group\r\n              <h2>{GroupData.groupname}</h2>\r\n              {!GroupData.groupname && <h2>None</h2>}\r\n            </div>\r\n            <Select\r\n              options={groups}\r\n              onChange={(values) => handleGrpChange(values)}\r\n              values={[]}\r\n              labelField=\"groupname\"\r\n              valueField=\"id\"\r\n              placeholder={`${activeGroupName} `}\r\n              style={{\r\n                width: 200,\r\n                margin: \"auto\",\r\n                textAlign: \"center\",\r\n                backgroundColor: \"white\",\r\n              }}\r\n              dropdownHeight=\"200px\"\r\n              dropdownGap={-5}\r\n              searchable={false}\r\n            />\r\n            {Items && (\r\n              <>\r\n                <p>Group Type: {ModeList[GroupData.mode]}</p>\r\n              </>\r\n            )}\r\n            {GroupData.mode === 0 && (\r\n              <>\r\n                Assigned Member:\r\n                <Link\r\n                  to={`/groups/${GroupData.id}/users/${GroupData.partnerid}`}\r\n                >\r\n                  {GroupData.partner && <>{GroupData.partner}</>}\r\n                </Link>\r\n                {!GroupData.partner && <> None</>}\r\n              </>\r\n            )}\r\n          </div>\r\n          <hr />\r\n          <div className=\"FilterColItems\">\r\n            <div className=\"FilterItemCount\">\r\n              {Items && Items.length !== 0 && (\r\n                <>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">{Items.length}</div>\r\n                    <div className=\"ItemInfoLabel\">Total Wishlist Items</div>\r\n                  </div>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">${avgPrice}</div>\r\n                    <div className=\"ItemInfoLabel\">Average Item Price</div>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {(!Items || Items.length == 0) && (\r\n                <>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">0</div>\r\n                    <div className=\"ItemInfoLabel\">Total Wishlist Items</div>\r\n                  </div>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">0</div>\r\n                    <div className=\"ItemInfoLabel\">Average Item Price</div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          {Items && Items.length !== 0 && (\r\n            <>\r\n              <div className=\"FilterSearch\">\r\n                <div>Search for an item</div>\r\n                <Select\r\n                  options={Items}\r\n                  values={searchFilterItem}\r\n                  labelField=\"name\"\r\n                  valueField=\"itemid\"\r\n                  placeholder={`Hehe`}\r\n                  style={{\r\n                    width: 200,\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    backgroundColor: \"white\",\r\n                  }}\r\n                  searchBy=\"name\"\r\n                  onChange={(values) => handleFilterSearch(values)}\r\n                  dropdownHeight=\"200px\"\r\n                  dropdownGap={-5}\r\n                />\r\n                <div style={{ marginTop: \"0.5rem\" }}>\r\n                  <button\r\n                    className=\"ClearFilterBtn\"\r\n                    onClick={() => handleSearchClear()}\r\n                  >\r\n                    CLEAR\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"FilterButtons\">\r\n                Filter Items By Price\r\n                <div className=\"FilterBtnItem\">\r\n                  <input\r\n                    className=\"FilterBtn\"\r\n                    type=\"checkbox\"\r\n                    checked={lessBtn}\r\n                    onChange={() => setLessBtn(!lessBtn)}\r\n                  ></input>\r\n                  <div className=\"FilterBtnLabel\">{`Less than `}</div>\r\n                  <CurrencyInput\r\n                    className=\"FilterPriceInput\"\r\n                    placeholder=\"0.00\"\r\n                    onChange={(e) => SetLessFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"FilterBtnItem\">\r\n                  <input\r\n                    className=\"FilterBtn\"\r\n                    type=\"checkbox\"\r\n                    checked={moreBtn}\r\n                    onChange={() => setMoreBtn(!moreBtn)}\r\n                  ></input>\r\n                  <div className=\"FilterBtnLabel\">{`More than `}</div>\r\n                  <CurrencyInput\r\n                    className=\"FilterPriceInput\"\r\n                    placeholder=\"0.00\"\r\n                    onChange={(e) => SetMoreFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"FilterPriceBtn\"\r\n                  onClick={() => handleFilterItems()}\r\n                >\r\n                  Filter Items\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n *\r\n * @PageLocation Various Pages\r\n * @Component ModalTypes\r\n * @Description Content for modal confirmation screens\r\n *\r\n */\r\n\r\nexport const ModalTypes = [\r\n  {\r\n    Title: \"Leave Group?\",\r\n    Warning: \"Leaving this group will delete your items forever for this group\",\r\n  },\r\n  {\r\n    Title: \"Delete Item?\",\r\n    Warning:\r\n      \"This item and its image will be deleted permanently from this registry\",\r\n  },\r\n  {\r\n    Title: \"Purchase Item\",\r\n    Warning: \"Purchase this Item?\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { leaveGroup } from \"../../actions/groupActions\";\r\nimport { deactivateModal } from \"../../actions/modalActions\";\r\nimport {\r\n  deleteItem,\r\n  unSelectEditItem,\r\n  editItem,\r\n} from \"../../actions/itemActions\";\r\nimport \"../../styles/NavigationStyles/ConfirmModal.css\";\r\nimport { ModalTypes } from \"./ModalComponents/ConfirmationModal/ModalTypes\";\r\n/**\r\n *\r\n * @PageLocation Various Pages\r\n * @Component ConfirmationModal\r\n * @Description Handles confirmation of various actions based on ActionID\r\n *\r\n * ActionID Reference: 0 -> Leave Group   1 -> Delete Item   2 -> Purchase Item\r\n *\r\n */\r\nexport const ConfirmationModal = () => {\r\n  const ModalData = useSelector((state) => state.modal.modalData);\r\n  const dispatch = useDispatch();\r\n\r\n  /*   Close modal on decline    */\r\n  const handleDecline = () => {\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  /* Based on modal action, handle confirmation accordingly */\r\n  const handleConfirm = () => {\r\n    if (ModalData.ActionID === 0) {\r\n      dispatch(leaveGroup(ModalData.groupID, ModalData.userID));\r\n    }\r\n\r\n    if (ModalData.ActionID === 1) {\r\n      dispatch(deleteItem(ModalData.ItemID, ModalData.ItemImage));\r\n      dispatch(unSelectEditItem());\r\n    }\r\n\r\n    if (ModalData.ActionID === 2) {\r\n      dispatch(editItem(ModalData.item));\r\n    }\r\n\r\n    //Exit modal and clear modal data\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ConfirmModalBackground\">\r\n        <div className=\"ConfirmModalContainer\">\r\n          <div className=\"ConfirmModalHeader\">\r\n            {ModalData && <div>{ModalTypes[ModalData.ActionID].Title}</div>}\r\n          </div>\r\n          <div className=\"ConfirmBody\">\r\n            <div className=\"ConfirmWarning\">\r\n              Warning: <br />\r\n              {ModalData && <div>{ModalTypes[ModalData.ActionID].Warning}</div>}\r\n            </div>\r\n            <div className=\"ConfirmButtons\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    handleDecline();\r\n                  }}\r\n                  style={{\r\n                    backgroundColor: \"red\",\r\n                    borderRadius: 10,\r\n                    padding: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: 30,\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  NO\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={() => handleConfirm()}\r\n                  style={{\r\n                    backgroundColor: \"green\",\r\n                    borderRadius: 10,\r\n                    padding: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: 30,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"10%\",\r\n                  }}\r\n                >\r\n                  YES\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"../styles/PageStyles/Dashboard.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadUser } from \"../actions/authActions\";\r\nimport { getGroups } from \"../actions/groupActions\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { GroupComponent } from \"../components/Groups/GroupComponent\";\r\nimport { RegistryList } from \"../components/Items/RegistryList\";\r\nimport { AddItemModal } from \"../components/Modals/AddItemModal\";\r\nimport { EditItemModal } from \"../components/Modals/EditItemModal\";\r\nimport { FilterColumn } from \"../components/Filters/FilterColumn\";\r\nimport { ConfirmationModal } from \"../components/Modals/ConfirmationModal\";\r\nimport { clearItems } from \"../actions/itemActions\";\r\n/**\r\n *\r\n * @Page Dashboard\r\n * @Description Home page for the user. Add/View items based on the active group.\r\n *              If user is not in any groups, linked to Group Management page\r\n * @route /\r\n *\r\n */\r\nexport const Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const GroupID = useSelector((state) => state.group.currentGroup.Group.id);\r\n  const NumItems = useSelector((state) => state.item.memberItems);\r\n  const showEditModal = useSelector(\r\n    (state) => state.item.selectedItem.displayEditModal\r\n  );\r\n  const ActiveModal = useSelector((state) => state.modal.activeModal.modalType);\r\n  useEffect(() => {\r\n    dispatch(clearItems());\r\n    async function getData() {\r\n      let UID = await dispatch(loadUser());\r\n      dispatch(getGroups(UID));\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"dashContainer\"\r\n        style={{\r\n          position:\r\n            !GroupID || (NumItems && NumItems.length < 4)\r\n              ? \"absolute\"\r\n              : \"static\",\r\n        }}\r\n      >\r\n        {ActiveModal === \"Confirm\" && <ConfirmationModal />}\r\n        {ActiveModal === \"AddItem\" && <AddItemModal />}\r\n        {showEditModal && ActiveModal !== \"Confirm\" && <EditItemModal />}\r\n        <NavBar title=\"HomePage\" />\r\n\r\n        <div className=\"DashBody\">\r\n          <FilterColumn />\r\n          <div className=\"registryBody\">\r\n            <div\r\n              className=\"registryPlaceholder\"\r\n              style={{ display: !GroupID ? \"block\" : \"none\" }}\r\n            >\r\n              <div>{GroupID ? `Your Wishlist` : <GroupComponent />} </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"registryDashContainer\"\r\n              style={{ display: GroupID ? \"block\" : \"none\" }}\r\n            >\r\n              {GroupID && <RegistryList PageType={\"Dashboard\"} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../styles/PageStyles/GroupPage.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n *\r\n * @PageLocation GroupPage\r\n * @Component UserList\r\n * @Description Array of members within a specified group.\r\n *              Links to member pages with their respective registry items.\r\n *\r\n */\r\nexport const UserList = () => {\r\n  const members = useSelector((state) => state.group.pageGroup.members);\r\n  const groupid = useSelector((state) => state.group.pageGroup.id);\r\n  return (\r\n    <>\r\n      <div className=\"UserListContainer\">\r\n        {members &&\r\n          members.map((member, index) => (\r\n            <div className=\"UserContainer\" key={index}>\r\n              <Link\r\n                to={`/groups/${groupid}/users/${member.id}`}\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                }}\r\n              >\r\n                <div className=\"UserImage\">\r\n                  <img\r\n                    src={`/api/images/${member.profileimage}`}\r\n                    style={{ width: \"100%\", height: \"100%\", borderRadius: 25 }}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"UserName\">{member.name}</div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/PageStyles/GroupPage.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { getGroup } from \"../actions/groupActions\";\r\nimport { UserList } from \"../components/Groups/UserList\";\r\n\r\n/**\r\n *\r\n * @Page Group Page\r\n * @Description Information about the group and all its members\r\n * @route /groups/:id\r\n *\r\n */\r\nexport const GroupPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let PageInfo = await dispatch(getGroup(props.match.params.id));\r\n      setGroupName(PageInfo.name);\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <NavBar title={groupName} />\r\n        <div className=\"MemberContainer\">\r\n          <h1>Members in this group</h1>\r\n          <UserList />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../styles/PageStyles/ManageGroup.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoTrash } from \"react-icons/io5\";\r\nimport { IoPencilSharp } from \"react-icons/io5\";\r\nimport { IoSettingsSharp } from \"react-icons/io5\";\r\nimport { selectEditGroup } from \"../../actions/groupActions\";\r\nimport { leaveGroup } from \"../../actions/groupActions\";\r\nimport { GrLogout } from \"react-icons/gr\";\r\nimport { setActiveModal, updateModalData } from \"../../actions/modalActions\";\r\n/**\r\n * @PageLocation ManageGroup\r\n * @Component GroupList\r\n * @Description Array of groups that link to respective group pages\r\n *              Takes in a parameter string of \"Admin\" or \"Member\"\r\n *              filtering group data for owned/unowned groups\r\n *\r\n */\r\n\r\nconst ModeList = {\r\n  0: \"Secret Santa\",\r\n  1: \"Wedding\",\r\n  2: \"Other\",\r\n};\r\n\r\nexport const GroupList = ({ FilterType }) => {\r\n  const groups = useSelector((state) => state.group.groups);\r\n  const userID = useSelector((state) => state.auth.user.id);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditGroup = (group) => {\r\n    dispatch(selectEditGroup(group));\r\n  };\r\n\r\n  const handleLeaveGroup = (groupID) => {\r\n    dispatch(setActiveModal(\"Confirm\"));\r\n\r\n    let ModalData = {\r\n      ActionID: 0,\r\n      groupID: groupID,\r\n      userID: userID,\r\n    };\r\n    dispatch(updateModalData(ModalData));\r\n    //dispatch(leaveGroup(groupID, userID));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"GroupListHeader\">\r\n        <div className=\"GroupNameHeader\">Group Name</div>\r\n        <div className=\"VerticalLine\"></div>\r\n        <div className=\"GroupTypeHeader\">Group Type</div>\r\n        <div className=\"VerticalLine\"></div>\r\n        <div className=\"GroupActionHeader\">Edit</div>\r\n      </div>\r\n      <div className=\"GroupListContainer\">\r\n        {groups &&\r\n          groups\r\n            .filter((group) => group.role === FilterType)\r\n            .map((group, index) => (\r\n              <div className=\"GroupContainer\" key={index}>\r\n                <div className=\"GroupLabel\">\r\n                  {group.mode !== 1 && (\r\n                    <Link\r\n                      to={`/groups/${group.id}`}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                      }}\r\n                    >\r\n                      {group.groupname}\r\n                    </Link>\r\n                  )}\r\n                  {group.mode === 1 && (\r\n                    <Link\r\n                      to={`/groups/${group.id}/event/users/${userID}`}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                      }}\r\n                    >\r\n                      {group.groupname}\r\n                    </Link>\r\n                  )}\r\n                </div>\r\n                <div className=\"VerticalLine\"></div>\r\n                <div className=\"GroupMode\">\r\n                  <div className=\"GroupModeLabel\">{ModeList[group.mode]}</div>\r\n                </div>\r\n                <div className=\"VerticalLine\"></div>\r\n                {FilterType === \"Member\" && (\r\n                  <div className=\"GroupActions\">\r\n                    <div className=\"LeaveGroupBtn\">\r\n                      <GrLogout onClick={() => handleLeaveGroup(group.id)} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {FilterType === \"Admin\" && (\r\n                  <div className=\"GroupActions\">\r\n                    <div className=\"SettingsGroupBtn\">\r\n                      <IoSettingsSharp onClick={() => handleEditGroup(group)} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"../../styles/PageStyles/ManageGroup.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setActiveModal } from \"../../actions/modalActions\";\r\nimport { setModalPage } from \"../../actions/modalActions\";\r\n/**\r\n * @PageLocation ManageGroup\r\n * @Component CreateJoinGroup\r\n * @Description Wrapper Component for Group Creation/Deletion\r\n *\r\n */\r\nexport const CreateJoinGroup = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleModal = (ModalType) => {\r\n    if (ModalType === \"Add\") {\r\n      dispatch(setActiveModal(\"Group\"));\r\n      dispatch(setModalPage(\"ModeSelect\"));\r\n    } else {\r\n      dispatch(setActiveModal(\"Group\"));\r\n      dispatch(setModalPage(\"JoinRegister\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"GroupManageContainer\">\r\n        <div className=\"CreateBtn\">\r\n          <button\r\n            className=\"ActionButton\"\r\n            id=\"Abtn\"\r\n            onClick={() => handleModal(\"Add\")}\r\n          >\r\n            CREATE A GROUP\r\n          </button>\r\n        </div>\r\n        <div className=\"JoinBtn\">\r\n          <button\r\n            className=\"ActionButton\"\r\n            id=\"Jbtn\"\r\n            onClick={() => handleModal(\"Join\")}\r\n          >\r\n            JOIN A GROUP\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { setModalPage } from \"../../../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component Menu\r\n * @Description Landing modal page for editing groups.\r\n *              Presents options of changing passcode, managing members, and deleting the group.\r\n *\r\n *\r\n */\r\nexport const Menu = () => {\r\n  const dispatch = useDispatch();\r\n  const GroupDetails = useSelector(\r\n    (state) => state.group.selectedGroup.groupDetails\r\n  );\r\n  const handleModalChange = (modalType) => {\r\n    dispatch(setModalPage(modalType));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MenuContainer\">\r\n        <h3>Group Passcode: {GroupDetails.passcode}</h3>\r\n        <div className=\"MenuBody\">\r\n          <h2\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => handleModalChange(\"Passcode\")}\r\n          >\r\n            Change Passcode\r\n          </h2>\r\n          {GroupDetails.mode !== 1 && (\r\n            <h2\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => handleModalChange(\"ManageMembers\")}\r\n            >\r\n              Manage Members\r\n            </h2>\r\n          )}\r\n          <h2\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => handleModalChange(\"Delete\")}\r\n          >\r\n            Delete Group\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"MenuFooter\">\r\n          <button className=\"ExitMenuBtn\" onClick={() => console.log(\"HI\")}>\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { unSelectEditGroup } from \"../../../../actions/groupActions\";\r\nimport { deactivateModal } from \"../../../../actions/modalActions\";\r\nimport { setModalPage } from \"../../../../actions/modalActions\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { IoArrowBack } from \"react-icons/io5\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component Passcode\r\n * @Description Reset group passcode modal.\r\n *\r\n *\r\n */\r\nexport const Passcode = () => {\r\n  const [passcode, setPasscode] = useState(\"\");\r\n  const [displaySuccess, setDisplaySuccess] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const GroupID = useSelector(\r\n    (state) => state.group.selectedGroup.groupDetails.id\r\n  );\r\n\r\n  /*     Close out the modal entirely   */\r\n  const closeModal = () => {\r\n    dispatch(unSelectEditGroup());\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  /*    Move back to modal menu         */\r\n  const changeModal = () => {\r\n    dispatch(setModalPage(\"GroupMenu\"));\r\n  };\r\n\r\n  /*   Process passcode change request  */\r\n  const handleSubmit = () => {\r\n    let PassObject = {\r\n      GroupID: GroupID,\r\n      newPass: passcode,\r\n    };\r\n    axios\r\n      .post(`http://localhost:3005/api/groups/edit`, {\r\n        PassObject,\r\n      })\r\n      .then((res) => {\r\n        setDisplaySuccess(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"PasscodeContainer\"\r\n        style={{ display: displaySuccess ? \"none\" : \"block\" }}\r\n      >\r\n        <div className=\"PasscodeBody\">\r\n          <h2>Enter a New Passcode</h2>\r\n          <input\r\n            className=\"PasscodeInput\"\r\n            placeholder=\"Passcode\"\r\n            onChange={(e) => setPasscode(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div style={{ marginTop: \"10%\" }}>\r\n          <div className=\"SubmitPasscode\">\r\n            <button\r\n              className=\"PasscodeSubmitBtn\"\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              Change Passcode\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ display: displaySuccess ? \"block\" : \"none\" }}>\r\n        Passcode Change Successful!\r\n        <div className=\"PasscodeConfirmation\">\r\n          <button\r\n            style={{ fontSize: 22, cursor: \"pointer\" }}\r\n            onClick={() => closeModal()}\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { getGroupMembers } from \"../../../../actions/groupActions\";\r\nimport { setModalPage } from \"../../../../actions/modalActions\";\r\nimport { removeGroupMember } from \"../../../../actions/groupActions\";\r\nimport { IoBan } from \"react-icons/io5\";\r\nimport { IoStar } from \"react-icons/io5\";\r\nimport { assignPartners } from \"../../../../actions/groupActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component Members\r\n * @Description Displays a list of members in a selected group, and allows group admins to kick members.\r\n *\r\n *\r\n */\r\nexport const Members = () => {\r\n  const [confirmModal, setConfirmModal] = useState(false);\r\n  const [selectedUserID, setSelectedUserID] = useState(null);\r\n  const [adminIsPartner, setAdminIsPartner] = useState(false);\r\n  const GroupDetails = useSelector(\r\n    (state) => state.group.selectedGroup.groupDetails\r\n  );\r\n  const GroupMembers = useSelector(\r\n    (state) => state.group.selectedGroup.groupMembers\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const assign = () => {\r\n    let PartnerList = [];\r\n    let idx = 0;\r\n    let PartnerMap = [];\r\n    if (!adminIsPartner) {\r\n      idx = 1;\r\n      PartnerMap.push([GroupMembers[0].id, -1]);\r\n    }\r\n    //put all ids in an array\r\n    for (let i = idx; i < GroupMembers.length; i++) {\r\n      PartnerList.push(GroupMembers[i].id);\r\n    }\r\n\r\n    //Randomly assign unique sets of partners\r\n    while (PartnerList.length >= 2) {\r\n      let r1 = Math.random() * PartnerList.length;\r\n      let person1 = PartnerList.splice(r1, 1)[0];\r\n\r\n      let r2 = Math.random() * PartnerList.length;\r\n      let person2 = PartnerList.splice(r2, 1)[0];\r\n      PartnerMap.push([person1, person2]);\r\n    }\r\n\r\n    let GroupParams;\r\n    for (let i = 0; i < PartnerMap.length; i++) {\r\n      GroupParams = {\r\n        PartnerList: PartnerMap[i],\r\n        GroupID: GroupDetails.id,\r\n      };\r\n\r\n      dispatch(assignPartners(GroupParams));\r\n    }\r\n  };\r\n\r\n  /*  Displays Confirmation Modal */\r\n  const confirmKick = (UserID) => {\r\n    setConfirmModal(true);\r\n    setSelectedUserID(UserID);\r\n  };\r\n  /* If user declines the confirmation, reset */\r\n  const reset = () => {\r\n    setConfirmModal(false);\r\n    setSelectedUserID(null);\r\n  };\r\n\r\n  /* If user accepts the confirmation, remove user */\r\n  const handleKick = () => {\r\n    setConfirmModal(false);\r\n    dispatch(removeGroupMember(GroupDetails.id, selectedUserID));\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getMembers() {\r\n      await dispatch(getGroupMembers(GroupDetails.id));\r\n    }\r\n    getMembers();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"MainMemberModal\"\r\n        style={{ display: confirmModal ? \"none\" : \"block\" }}\r\n      >\r\n        <div className=\"body\">\r\n          <h1>Members</h1>\r\n          <div className=\"MemberModalHeaderItem\">\r\n            <div className=\"NameHeader\">Name</div>\r\n            <div className=\"RoleHeader\">Role</div>\r\n            <div className=\"PartnerHeader\">Partner</div>\r\n            <div className=\"IconHeader\">Action</div>\r\n          </div>\r\n          <div className=\"MemberModalContainer\">\r\n            {GroupMembers &&\r\n              GroupMembers.map((Member, index) => (\r\n                <div key={index} className=\"MemberItem\">\r\n                  <div className=\"MemberName\">{Member.name}</div>\r\n                  <div className=\"MemberRole\">{Member.role}</div>\r\n                  <div className=\"PartnerName\">{Member.partner}</div>\r\n                  <div className=\"MemberActionBtns\">\r\n                    {Member.role !== \"Admin\" && (\r\n                      <IoBan\r\n                        style={{ color: \"red\", cursor: \"pointer\" }}\r\n                        onClick={() => confirmKick(Member.id)}\r\n                      />\r\n                    )}\r\n                    {Member.role === \"Admin\" && <IoStar />}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          {GroupMembers && (\r\n            <>\r\n              <div>\r\n                <button\r\n                  className=\"AssignPartnerBtn\"\r\n                  onClick={() => assign()}\r\n                  disabled={\r\n                    GroupMembers.length < 2 ||\r\n                    (GroupMembers.length % 2 === 1 &&\r\n                      adminIsPartner === true) ||\r\n                    (GroupMembers.length === 2 && adminIsPartner === false)\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  style={{\r\n                    backgroundColor:\r\n                      GroupMembers.length < 2 ||\r\n                      (GroupMembers.length % 2 === 1 &&\r\n                        adminIsPartner === true) ||\r\n                      (GroupMembers.length === 2 && adminIsPartner === false)\r\n                        ? \"gray\"\r\n                        : \"dodgerblue\",\r\n                  }}\r\n                >\r\n                  Assign Partners\r\n                </button>\r\n              </div>\r\n              <input\r\n                className=\"AdminPartnerBtn\"\r\n                type=\"checkbox\"\r\n                disabled={GroupMembers.length % 2 === 0 ? false : true}\r\n                checked={adminIsPartner}\r\n                onChange={() => setAdminIsPartner(!adminIsPartner)}\r\n              ></input>\r\n              Assign Admin (you) to a partner\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"ConfirmationModal\"\r\n        style={{ display: confirmModal ? \"block\" : \"none\" }}\r\n      >\r\n        <div className=\"ConfirmBody\" style={{ marginTop: \"30%\" }}>\r\n          <div>Are you sure you want to delete this user?</div>\r\n          <button\r\n            onClick={() => {\r\n              reset();\r\n            }}\r\n            style={{\r\n              backgroundColor: \"red\",\r\n              borderRadius: 15,\r\n              padding: \"1%\",\r\n              color: \"white\",\r\n              fontSize: 30,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            NO\r\n          </button>\r\n          <button\r\n            onClick={() => handleKick()}\r\n            style={{\r\n              backgroundColor: \"green\",\r\n              borderRadius: 15,\r\n              padding: \"1%\",\r\n              color: \"white\",\r\n              fontSize: 30,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            YES\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { deleteGroup } from \"../../../../actions/groupActions\";\r\nimport { unSelectEditGroup } from \"../../../../actions/groupActions\";\r\nimport { setModalPage } from \"../../../../actions/modalActions\";\r\nimport { deactivateModal } from \"../../../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component ConfirmDelete\r\n * @Description Confirmation Modal for group deletion.\r\n *\r\n *\r\n */\r\nexport const ConfirmDelete = () => {\r\n  const GroupID = useSelector(\r\n    (state) => state.group.selectedGroup.groupDetails.id\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  /*If user declines deletion move back to modal menu */\r\n  const handleDecline = () => {\r\n    dispatch(setModalPage(\"GroupMenu\"));\r\n  };\r\n\r\n  /*     Close out the modal entirely   */\r\n  const closeModal = () => {\r\n    dispatch(unSelectEditGroup());\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  /*If user accepts, delete the group */\r\n  const handleDelete = () => {\r\n    dispatch(deleteGroup(GroupID));\r\n    dispatch(unSelectEditGroup());\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ConfirmDeleteContainer\">\r\n        <div className=\"body\">Are you sure you want to delete this group?</div>\r\n        <div className=\"footer\">\r\n          <button\r\n            onClick={() => {\r\n              handleDecline();\r\n            }}\r\n            style={{\r\n              backgroundColor: \"red\",\r\n              borderRadius: 15,\r\n              padding: \"1%\",\r\n              color: \"white\",\r\n              fontSize: 30,\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            NO\r\n          </button>\r\n          <button\r\n            onClick={() => handleDelete()}\r\n            style={{\r\n              backgroundColor: \"green\",\r\n              borderRadius: 15,\r\n              padding: \"1%\",\r\n              color: \"white\",\r\n              fontSize: 30,\r\n              cursor: \"pointer\",\r\n              marginLeft: \"10%\",\r\n            }}\r\n          >\r\n            YES\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/GroupStyles/GroupModals.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { unSelectEditGroup } from \"../../actions/groupActions\";\r\nimport { Menu } from \"./ModalComponents/EditGroupModal/Menu\";\r\nimport { Passcode } from \"./ModalComponents/EditGroupModal/Passcode\";\r\nimport { Members } from \"./ModalComponents/EditGroupModal/Members\";\r\nimport { ConfirmDelete } from \"./ModalComponents/EditGroupModal/ConfirmDelete\";\r\nimport { deactivateModal, setModalPage } from \"../../actions/modalActions\";\r\nimport { IoArrowBack } from \"react-icons/io5\";\r\n/**\r\n *\r\n * @PageLocation ManageGroup\r\n * @Component EditGroupModal\r\n * @Description Modal that allows a user to edit and delete an owned group\r\n *\r\n */\r\nexport const EditGroupModal = () => {\r\n  const ActiveModal = useSelector(\r\n    (state) => state.modal.activeModal.activePage\r\n  );\r\n  const ShowModal = useSelector(\r\n    (state) => state.group.selectedGroup.displayEditGroupModal\r\n  );\r\n  const [modalComponent, setModalComponent] = useState(<Menu />);\r\n  const [modalTitle, setModalTitle] = useState(\"Menu\");\r\n  const dispatch = useDispatch();\r\n\r\n  /*     Move back to modal menu     */\r\n  const changeModal = () => {\r\n    dispatch(setModalPage(\"GroupMenu\"));\r\n  };\r\n\r\n  /* Close modal entirely */\r\n  const handleModalClose = async () => {\r\n    dispatch(unSelectEditGroup());\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  /*Render modal pages based on redux store state */\r\n  useEffect(() => {\r\n    switch (ActiveModal) {\r\n      case \"GroupMenu\":\r\n        setModalComponent(<Menu />);\r\n        setModalTitle(\"Menu\");\r\n        break;\r\n\r\n      case \"Passcode\":\r\n        setModalComponent(<Passcode />);\r\n        setModalTitle(\"Change Passcode\");\r\n        break;\r\n\r\n      case \"ManageMembers\":\r\n        setModalComponent(<Members />);\r\n        setModalTitle(\"Manage Members\");\r\n        break;\r\n\r\n      case \"Delete\":\r\n        setModalComponent(<ConfirmDelete />);\r\n        setModalTitle(\"Delete Group\");\r\n        break;\r\n    }\r\n    const handleClick = (e) => {\r\n      if (e.target && e.target.className === \"GrpModalBackground\") {\r\n        dispatch(unSelectEditGroup());\r\n        dispatch(deactivateModal());\r\n      }\r\n    };\r\n    if (ShowModal) {\r\n      window.addEventListener(\"click\", handleClick);\r\n    }\r\n  }, [ActiveModal]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"GrpModalBackground\">\r\n        <div className=\"GrpModalContainer\">\r\n          <div className=\"GrpModalHeader\">\r\n            <div>\r\n              <IoArrowBack\r\n                onClick={() => changeModal(\"Menu\")}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  visibility: modalTitle === \"Menu\" ? \"hidden\" : \"visible\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>{modalTitle}</div>\r\n            <div className=\"modalCloseButton\">\r\n              <button\r\n                onClick={() => handleModalClose()}\r\n                style={{ fontSize: 22, cursor: \"pointer\" }}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {modalComponent}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { setModalPage } from \"../../../../actions/modalActions\";\r\nimport { updateModalData } from \"../../../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component ModeSelect\r\n * @Description Modal Component. Prompts users to select the type of group they wish to create\r\n *\r\n *\r\n */\r\nexport const ModeSelect = () => {\r\n  //Save group modes in DB as single integers,\r\n  //Current: 0 -> Secret Santa ; 1 -> Wedding ; 2 -> Other\r\n  const [eventType, setEventType] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    let ModalData = {\r\n      Mode: eventType,\r\n    };\r\n    dispatch(updateModalData(ModalData));\r\n\r\n    dispatch(setModalPage(\"EventInfo\"));\r\n\r\n    // dispatch(setModalPage(\"GroupRegister\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>Pick a type of Group</h2>\r\n      </div>\r\n      <div className=\"ModeSelectBody\">\r\n        <div className=\"ModeBtn\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"radBtn\"\r\n            value=\"Secret Santa\"\r\n            name=\"groupmode\"\r\n            onClick={() => setEventType(0)}\r\n            defaultChecked\r\n          />\r\n          Secret Santa\r\n          <div className=\"ModeInfo\">Group Size: Any</div>\r\n        </div>\r\n        <div className=\"ModeBtn\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"radBtn\"\r\n            value=\"Wedding\"\r\n            onClick={() => setEventType(1)}\r\n            name=\"groupmode\"\r\n          />{\" \"}\r\n          Wedding\r\n          <div className=\"ModeInfo\">Group Size: 1</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ModeSelectFooter\">\r\n        <button className=\"ModeSelectBtn\" onClick={() => handleSubmit()}>\r\n          Choose Mode\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport {\r\n  setModalPage,\r\n  updateModalData,\r\n  deactivateModal,\r\n} from \"../../../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component EventInfo\r\n * @Description Modal Component during group creation.\r\n *              Prompts user for optional additional information to be displayed on event page.\r\n *\r\n */\r\nexport const EventInfo = () => {\r\n  const id = useSelector((state) => state.auth.user.id);\r\n  const GroupMode = useSelector((state) => state.modal.modalData.Mode);\r\n  const [eventInfo, setEventInfo] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async () => {\r\n    let ModalData = {\r\n      Mode: GroupMode,\r\n      Bio: eventInfo,\r\n    };\r\n    dispatch(updateModalData(ModalData));\r\n    dispatch(setModalPage(\"GroupRegister\"));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"GroupRegisterHeader\">\r\n        <h1>Event Bio</h1>\r\n      </div>\r\n      <div className=\"GroupRegisterBody\">\r\n        <p>Enter Information about your event</p>\r\n        <textarea\r\n          className=\"EventModalInput\"\r\n          rows=\"10\"\r\n          cols=\"50\"\r\n          placeholder=\"Enter a short message/description you'd like others to see\"\r\n          onChange={(e) => setEventInfo(e.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"GroupRegisterFooter\">\r\n        <button className=\"GroupRegisterBtn\" onClick={() => handleSubmit()}>\r\n          {\" \"}\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { addGroup } from \"../../../../actions/groupActions\";\r\nimport {\r\n  setModalPage,\r\n  deactivateModal,\r\n} from \"../../../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component GroupRegister\r\n * @Description Modal Component. Credential form for group creation.\r\n *\r\n *\r\n */\r\nexport const GroupRegister = () => {\r\n  const id = useSelector((state) => state.auth.user.id);\r\n  const GroupData = useSelector((state) => state.modal.modalData);\r\n  const [groupname, setGroupName] = useState(\"\");\r\n  const [passcode, setPasscode] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  /*   Handle Creation of Group */\r\n  const handleSubmit = async () => {\r\n    let GroupDetails = {\r\n      groupName: groupname,\r\n      passcode: passcode,\r\n      userid: id,\r\n      groupMode: GroupData.Mode,\r\n      Bio: GroupData.Bio,\r\n    };\r\n    let resp = await dispatch(addGroup(GroupDetails));\r\n    if (resp === \"Success\") {\r\n      dispatch(setModalPage(\"AddSuccess\"));\r\n    } else {\r\n      setErrors(resp);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"GroupRegisterHeader\">\r\n        <h1>Name and Passcode</h1>\r\n      </div>\r\n      <div className=\"GroupRegisterBody\">\r\n        {errors && <div>{errors}</div>}\r\n        <p>Enter a name for your group</p>\r\n        <input\r\n          className=\"modalInput\"\r\n          placeholder=\"Enter name\"\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        ></input>\r\n        <p>Enter a passcode for your group</p>\r\n        <input\r\n          className=\"modalInput\"\r\n          placeholder=\"Enter Passcode\"\r\n          onChange={(e) => setPasscode(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div className=\"GroupRegisterFooter\">\r\n        <button className=\"GroupRegisterBtn\" onClick={() => handleSubmit()}>\r\n          {\" \"}\r\n          Create Group\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deactivateModal } from \"../../../../actions/modalActions\";\r\n/**\r\n *\r\n * @PageLocation ManageGroups\r\n * @Component AddSuccess\r\n * @Description Group creation success feedback modal. Links user to item addition page for the created group.\r\n *\r\n *\r\n */\r\nexport const AddSuccess = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <div className=\"GroupRegisterHeader\">\r\n        <h1>Success!</h1>\r\n      </div>\r\n      <div className=\"GroupRegisterBody\">\r\n        Your group has been created.\r\n        <Link\r\n          to={`/`}\r\n          onClick={() => dispatch(deactivateModal())}\r\n          style={{\r\n            textDecoration: \"none\",\r\n          }}\r\n        >\r\n          <button className=\"AddSuccessBtn\">Start adding items</button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addGroupMember } from \"../../../../actions/groupActions\";\r\nimport { deactivateModal } from \"../../../../actions/modalActions\";\r\nimport \"../../../../styles/GroupStyles/GroupModals.css\";\r\n\r\n/**\r\n *\r\n * @PageLocation GroupPage\r\n * @Component JoinRegister\r\n * @Description Modal Component for the Edit Group Modal\r\n *\r\n *\r\n */\r\nexport const JoinRegister = () => {\r\n  const id = useSelector((state) => state.auth.user.id);\r\n  const [passcode, setPasscode] = useState(0);\r\n  const [groupname, setGroupName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async () => {\r\n    let AddResponse = await dispatch(addGroupMember(groupname, passcode, id));\r\n\r\n    if (AddResponse === \"Success\") {\r\n      dispatch(deactivateModal());\r\n    } else {\r\n      setError(AddResponse);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"JoinContainer\">\r\n        <div className=\"JoinBody\">\r\n          {error && <div>{error}</div>}\r\n          <div className=\"JoinInput\">\r\n            <p>Enter a group name</p>\r\n            <input\r\n              className=\"modalInput\"\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setGroupName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className=\"JoinInput\">\r\n            <p>Enter the group passcode</p>\r\n            <input\r\n              className=\"modalInput\"\r\n              placeholder=\"Enter Passcode\"\r\n              onChange={(e) => setPasscode(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <button className=\"JoinButton\" onClick={() => handleSubmit()}>\r\n          Join Group\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../styles/GroupStyles/GroupModals.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ModeSelect } from \"./ModalComponents/AddGroupModal/ModeSelect\";\r\nimport { EventInfo } from \"./ModalComponents/AddGroupModal/EventInfo\";\r\nimport { GroupRegister } from \"./ModalComponents/AddGroupModal/GroupRegister\";\r\nimport { AddSuccess } from \"./ModalComponents/AddGroupModal/AddSuccess\";\r\nimport { JoinRegister } from \"./ModalComponents/JoinGroupModal/JoinRegister\";\r\nimport { deactivateModal, setModalPage } from \"../../actions/modalActions\";\r\nimport { IoArrowBack } from \"react-icons/io5\";\r\n/**\r\n * @PageLocation ManageGroup\r\n * @Component GroupModal\r\n * @Description Allows users to create or join a group.\r\n *\r\n *              On creation, user's are prompted to pick a type of group then enter a name/passcode.\r\n *              On join, user's simply need to enter a valid groupname and corresponding passcode.\r\n *\r\n */\r\nexport const AddJoinGroupModal = () => {\r\n  const ActiveModal = useSelector(\r\n    (state) => state.modal.activeModal.activePage\r\n  );\r\n  const [modalComponent, setModalComponent] = useState(<ModeSelect />);\r\n  const [modalTitle, setModalTitle] = useState(\"ModeSelect\");\r\n  const dispatch = useDispatch();\r\n  const handleModalClose = () => {\r\n    dispatch(deactivateModal());\r\n  };\r\n\r\n  /*     Move back     */\r\n  const changeModal = () => {\r\n    dispatch(setModalPage(\"ModeSelect\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (ActiveModal) {\r\n      case \"ModeSelect\":\r\n        setModalComponent(<ModeSelect />);\r\n        setModalTitle(\"Create a Group\");\r\n        break;\r\n\r\n      case \"GroupRegister\":\r\n        setModalComponent(<GroupRegister />);\r\n        break;\r\n\r\n      case \"AddSuccess\":\r\n        setModalComponent(<AddSuccess />);\r\n        break;\r\n\r\n      case \"JoinRegister\":\r\n        setModalComponent(<JoinRegister />);\r\n        setModalTitle(\"Join a Group\");\r\n        break;\r\n      case \"EventInfo\":\r\n        setModalComponent(<EventInfo />);\r\n    }\r\n  }, [ActiveModal]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"GrpModalBackground\">\r\n        <div className=\"AddGrpModalContainer\">\r\n          <div className=\"GrpModalHeader\">\r\n            <div>\r\n              <IoArrowBack\r\n                onClick={() => changeModal(\"ModeSelect\")}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  visibility:\r\n                    ActiveModal === \"ModeSelect\" ||\r\n                    ActiveModal === \"JoinRegister\" ||\r\n                    ActiveModal === \"AddSuccess\"\r\n                      ? \"hidden\"\r\n                      : \"visible\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>{modalTitle}</div>\r\n            <div className=\"modalCloseButton\">\r\n              <button\r\n                onClick={() => handleModalClose()}\r\n                style={{ fontSize: 22, cursor: \"pointer\" }}\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {modalComponent}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"../styles/PageStyles/ManageGroup.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUser } from \"../actions/authActions\";\r\nimport { getGroups } from \"../actions/groupActions\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { GroupList } from \"../components/Groups/GroupList\";\r\nimport { CreateJoinGroup } from \"../components/Groups/CreateJoinGroup\";\r\nimport { EditGroupModal } from \"../components/Modals/EditGroupModal\";\r\nimport { AddJoinGroupModal } from \"../components/Modals/AddJoinGroupModal\";\r\nimport { ConfirmationModal } from \"../components/Modals/ConfirmationModal\";\r\n/**\r\n *\r\n * @Page Group Manager Page\r\n * @Description View all groups that a user is currently in.\r\n *              Delete/Add owned groups by the user or join other groups.\r\n * @route /managegroups\r\n *\r\n */\r\nexport const ManageGroup = () => {\r\n  const dispatch = useDispatch();\r\n  const ShowEditGroupModal = useSelector(\r\n    (state) => state.group.selectedGroup.displayEditGroupModal\r\n  );\r\n  const ActiveModal = useSelector((state) => state.modal.activeModal.modalType);\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let UID = await dispatch(loadUser());\r\n      dispatch(getGroups(UID));\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {ShowEditGroupModal && <EditGroupModal />}\r\n        {ActiveModal === \"Group\" && <AddJoinGroupModal />}\r\n        {ActiveModal === \"Confirm\" && <ConfirmationModal />}\r\n        <NavBar title=\"Manage Groups\" />\r\n        <CreateJoinGroup />\r\n        <div className=\"groupTypesContainer\">\r\n          <div className=\"ownedGroups\">\r\n            <h1>Owned Groups</h1>\r\n            <GroupList FilterType={\"Admin\"} />\r\n          </div>\r\n          <div className=\"otherGroups\">\r\n            <h1>Other Groups</h1>\r\n            <GroupList FilterType={\"Member\"} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { GET_EXT_USER, EXT_USER_LOADING, UPDATE_EXT_USER } from \"./types\";\r\nimport { returnErrors } from \"./errorActions\";\r\nexport const getUser = (userid) => async (dispatch) => {\r\n  dispatch(setExtUserLoading());\r\n  let response = await axios\r\n    .get(`/api/users/?userid=${userid}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_EXT_USER,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n  return response;\r\n};\r\n\r\nexport const updateUser = (userid) => async (dispatch) => {\r\n  let response = await axios\r\n    .post(`/api/users/update?userid=${userid}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UPDATE_EXT_USER,\r\n        payload: res.data,\r\n      });\r\n      return res.data;\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n  return response;\r\n};\r\n\r\nexport const setExtUserLoading = () => {\r\n  return {\r\n    type: EXT_USER_LOADING,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/FilterStyles/FilterColumn.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-dropdown-select\";\r\nimport CurrencyInput from \"../Items/CurrencyInput\";\r\nimport { clearFilterItems, filterItems } from \"../../actions/itemActions\";\r\nimport { setFilterItem } from \"../../actions/itemActions\";\r\n/**\r\n *\r\n * @PageLocation User Group Pages\r\n * @Component FilterOtherUsers\r\n * @Description Allows filtering of other users items\r\n *\r\n */\r\n\r\nconst ModeList = {\r\n  0: \"Secret Santa\",\r\n  1: \"Wedding\",\r\n  2: \"Other\",\r\n};\r\nexport const FilterOtherUsers = () => {\r\n  const GroupData = useSelector((state) => state.group.pageGroup);\r\n  const Items = useSelector((state) => state.item.memberItems);\r\n  const [lessFilter, SetLessFilter] = useState(0.0);\r\n  const [moreFilter, SetMoreFilter] = useState(0.0);\r\n  const [lessBtn, setLessBtn] = useState(false);\r\n  const [moreBtn, setMoreBtn] = useState(false);\r\n  const [searchFilterItem, setSearchFilterItem] = useState([]);\r\n  const [avgPrice, SetAvgPrice] = useState(0);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [image, setImage] = useState(\"DefaultProfileImage\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const UserData = useSelector((state) => state.user.externalUser);\r\n\r\n  const handleFilterItems = () => {\r\n    //Pass the filtered values as params only if the corresponding button is checked.\r\n    //Otherwise send a null value.\r\n    let FilterParams = {\r\n      LowerThan: lessBtn ? lessFilter : null,\r\n      MoreThan: moreBtn ? moreFilter : null,\r\n    };\r\n\r\n    dispatch(filterItems(FilterParams));\r\n  };\r\n\r\n  const handleFilterSearch = (values) => {\r\n    setSearchFilterItem(values);\r\n    if (values.length !== 0) {\r\n      dispatch(setFilterItem(values[0]));\r\n    }\r\n  };\r\n\r\n  const handleSearchClear = () => {\r\n    dispatch(clearFilterItems());\r\n    setSearchFilterItem([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n    if (Items) {\r\n      for (let i = 0; i < Items.length; i++) {\r\n        total += Number(Items[i].price.substring(1).replace(/,/g, \"\"));\r\n      }\r\n      SetAvgPrice((total / Items.length).toFixed(2));\r\n    }\r\n\r\n    if (UserData !== null) {\r\n      setUserName(UserData[0].name);\r\n      setImage(UserData[0].profileimage);\r\n    }\r\n  }, [Items, UserData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"FilterColumnBackground\">\r\n        <div className=\"FilterColContainer\">\r\n          <div className=\"GroupInfo\">\r\n            {GroupData.mode !== 1 && (\r\n              <div className=\"FilterColHeader\">\r\n                <div className=\"UserInfo\">\r\n                  <div className=\"UserName\">{userName}</div>\r\n                  <div className=\"UserImage\">\r\n                    <img\r\n                      height=\"100%\"\r\n                      width=\"100%\"\r\n                      src={`/api/images/${image}`}\r\n                      style={{ borderRadius: \"50%\" }}\r\n                    ></img>\r\n                  </div>\r\n                </div>\r\n                Current Group\r\n                <br />\r\n                <b>{GroupData.name}</b>\r\n                {!GroupData.name && <b>None</b>}\r\n              </div>\r\n            )}\r\n            {Items && GroupData.mode !== 1 && (\r\n              <>\r\n                <p>Group Type: {ModeList[GroupData.mode]}</p>\r\n              </>\r\n            )}\r\n            {GroupData.mode === 1 && (\r\n              <div className=\"EventFilterHeader\">Registry Details</div>\r\n            )}\r\n          </div>\r\n          <hr />\r\n          <div className=\"FilterColItems\">\r\n            <div className=\"FilterItemCount\">\r\n              {Items && Items.length !== 0 && (\r\n                <>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">{Items.length}</div>\r\n                    <div className=\"ItemInfoLabel\">Total Wishlist Items</div>\r\n                  </div>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">${avgPrice}</div>\r\n                    <div className=\"ItemInfoLabel\">Average Item Price</div>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {(!Items || Items.length == 0) && (\r\n                <>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">0</div>\r\n                    <div className=\"ItemInfoLabel\">Total Wishlist Items</div>\r\n                  </div>\r\n                  <div className=\"ItemInfoContainer\">\r\n                    <div className=\"ItemInfoNumber\">0</div>\r\n                    <div className=\"ItemInfoLabel\">Average Item Price</div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          {Items && Items.length !== 0 && (\r\n            <>\r\n              <div className=\"FilterSearch\">\r\n                <div>Search for an item</div>\r\n                <Select\r\n                  options={Items}\r\n                  values={searchFilterItem}\r\n                  labelField=\"name\"\r\n                  valueField=\"itemid\"\r\n                  placeholder={`Item Search`}\r\n                  style={{\r\n                    width: 200,\r\n                    margin: \"auto\",\r\n                    textAlign: \"center\",\r\n                    backgroundColor: \"white\",\r\n                  }}\r\n                  searchBy=\"name\"\r\n                  onChange={(values) => handleFilterSearch(values)}\r\n                  dropdownHeight=\"200px\"\r\n                  dropdownGap={-5}\r\n                />\r\n                <div style={{ marginTop: \"0.5rem\" }}>\r\n                  <button\r\n                    className=\"ClearFilterBtn\"\r\n                    onClick={() => handleSearchClear()}\r\n                  >\r\n                    CLEAR\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"FilterButtons\">\r\n                Filter Items By Price\r\n                <div className=\"FilterBtnItem\">\r\n                  <input\r\n                    className=\"FilterBtn\"\r\n                    type=\"checkbox\"\r\n                    checked={lessBtn}\r\n                    onChange={() => setLessBtn(!lessBtn)}\r\n                  ></input>\r\n                  <div className=\"FilterBtnLabel\">{`Less than `}</div>\r\n                  <CurrencyInput\r\n                    className=\"FilterPriceInput\"\r\n                    placeholder=\"0.00\"\r\n                    onChange={(e) => SetLessFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"FilterBtnItem\">\r\n                  <input\r\n                    className=\"FilterBtn\"\r\n                    type=\"checkbox\"\r\n                    checked={moreBtn}\r\n                    onChange={() => setMoreBtn(!moreBtn)}\r\n                  ></input>\r\n                  <div className=\"FilterBtnLabel\">{`More than `}</div>\r\n                  <CurrencyInput\r\n                    className=\"FilterPriceInput\"\r\n                    placeholder=\"0.00\"\r\n                    onChange={(e) => SetMoreFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"FilterPriceBtn\"\r\n                  onClick={() => handleFilterItems()}\r\n                >\r\n                  Filter Items\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/PageStyles/UserPage.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { RegistryList } from \"../components/Items/RegistryList\";\r\nimport { getItems } from \"../actions/itemActions\";\r\nimport { getUser } from \"../actions/userActions\";\r\nimport { getGroup } from \"../actions/groupActions\";\r\nimport { FilterOtherUsers } from \"../components/Filters/FilterOtherUsers\";\r\n/**\r\n *\r\n * @Page User Group Page\r\n * @Description Item page for a user in a specified group,\r\n * @route /groups/:GID/users/:UID\r\n *\r\n */\r\nexport const UserGroupPage = (props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [image, setImage] = useState(\"DefaultProfileImage\");\r\n  const dispatch = useDispatch();\r\n  const UID = props.match.params.id;\r\n  const GID = props.match.params.gid;\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let userInfo = await dispatch(getUser(UID));\r\n      setUserName(userInfo[0].name);\r\n      setImage(userInfo[0].profileimage);\r\n      await dispatch(getGroup(GID));\r\n      await dispatch(getItems(UID, GID));\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"UserPageContainer\">\r\n        <NavBar title=\"User Page\" />\r\n        <div className=\"UserPageBody\">\r\n          <FilterOtherUsers />\r\n          <div className=\"registryContainer\">\r\n            <RegistryList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/PageStyles/ProfilePage.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { loadUser, updateUser } from \"../actions/authActions\";\r\nimport { addImage } from \"../actions/imageActions\";\r\n\r\n/**\r\n *\r\n * @Page Profile Page\r\n * @Description Account Management for the user.\r\n *              Profile Image / Email / Password (TODO)\r\n * @route /profile\r\n *\r\n */\r\nexport const ProfilePage = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const dispatch = useDispatch();\r\n  const fileSelected = async (e) => {\r\n    const file = e.target.files[0];\r\n    const imageInfo = await postImage({ image: file });\r\n    let imageKey = imageInfo.Key;\r\n    let userObject = {\r\n      id: user.id,\r\n      name: user.name,\r\n      profileImage: imageKey,\r\n    };\r\n\r\n    dispatch(updateUser(userObject));\r\n  };\r\n\r\n  const postImage = async ({ image }) => {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    const result = await dispatch(addImage(formData));\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      dispatch(loadUser());\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ProfileContainer\">\r\n        <NavBar title=\"Profile Page\" />\r\n\r\n        {user.profileimage && (\r\n          <div className=\"ProfileInfo\">\r\n            <h1>{user.name}</h1>\r\n            <h2>{user.email}</h2>\r\n            <br />\r\n            <img\r\n              src={`/api/images/${user.profileimage}`}\r\n              width={150}\r\n              height={150}\r\n              style={{ borderRadius: 15 }}\r\n            ></img>\r\n            <div style={{ marginTop: 15, marginBottom: 15 }}>\r\n              <input\r\n                type=\"file\"\r\n                id=\"imgUpload\"\r\n                style={{ display: \"none\" }}\r\n                onChange={fileSelected}\r\n                accept=\"image/*\"\r\n              ></input>\r\n              <label htmlFor=\"imgUpload\" className=\"ProfileImgBtn\">\r\n                Upload a new image\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/PageStyles/PasswordReset.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { passResetProcess } from \"../actions/authActions\";\r\n/**\r\n *\r\n * @Page PasswordReset\r\n * @Description Reset a user's password\r\n * @route /resetPassword/:PageID\r\n *\r\n */\r\nexport const PasswordReset = (props) => {\r\n  const PID = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [resetCode, setResetCode] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [reqStatus, setReqStatus] = useState(false);\r\n  const [msg, SetMsg] = useState(null);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let response = await dispatch(\r\n      passResetProcess(PID, resetCode, newPassword)\r\n    );\r\n    if (response.status === 201) {\r\n      setReqStatus(true);\r\n    } else {\r\n      setReqStatus(false);\r\n    }\r\n    SetMsg(response.data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ResetPageContainer\">\r\n        <div className=\"ResetPageBody\">\r\n          <h1>Password Reset</h1>\r\n          {msg && <div>{msg}</div>}\r\n          <div\r\n            className=\"ResetForm\"\r\n            style={{ display: reqStatus === true ? \"none\" : \"block\" }}\r\n          >\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"reset-form-inner\">\r\n                <div className=\"reset-form-group\">\r\n                  <input\r\n                    type=\"code\"\r\n                    name=\"code\"\r\n                    id=\"resetCode\"\r\n                    placeholder=\"Reset Code\"\r\n                    onChange={(e) => setResetCode(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"reset-form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"resetPassword\"\r\n                    placeholder=\"New Password\"\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"submitButton\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Change Password\"\r\n                    style={{ width: 250, marginTop: \"1rem\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className=\"ResetSuccess\"\r\n            style={{ display: reqStatus === true ? \"block\" : \"none\" }}\r\n          >\r\n            <h4>You can now close this window or click the button below.</h4>\r\n            <Link to={\"/login\"}>\r\n              <button style={{ cursor: \"pointer\" }}>\r\n                Click here to go to the login page\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","/*---------------------------Part components-------------------------------*/\r\n\r\n//Create Components for each page of the tutorial.\r\nlet PartOne = (\r\n  <div>\r\n    <h3>Create or Join a group by visiting the Manage Group Page.</h3>\r\n    <img src={`/api/images/FTUE_S1_P1`} width={550} height={400}></img>\r\n  </div>\r\n);\r\nlet PartTwo = (\r\n  <div>\r\n    <h3>The Manage Group page can be reached using the navigation bar.</h3>\r\n    <img src={`/api/images/FTUE_S1_P2`} width={550} height={400}></img>\r\n  </div>\r\n);\r\nlet PartThree = (\r\n  <div>\r\n    <h3>Select the Groups Tab.</h3>\r\n    <img src={`/api/images/FTUE_S1_P3`} width={200} height={400}></img>\r\n  </div>\r\n);\r\nlet PartFour = (\r\n  <div>\r\n    <h3>Joining a Group.</h3>\r\n    <h4>Join an existing group with a group name and passcode.</h4>\r\n    <img src={`/api/images/FTUE_S2_P1`} width={650} height={375}></img>\r\n  </div>\r\n);\r\nlet PartFive = (\r\n  <div>\r\n    <h3>Create a Group (Part 1).</h3>\r\n    <h4>First set the type of group.</h4>\r\n    <img src={`/api/images/FTUE_S2_P2`} width={650} height={375}></img>\r\n  </div>\r\n);\r\nlet PartSix = (\r\n  <div>\r\n    <h3>Create a Group (Part 2).</h3>\r\n    <h4>Then set the group name and passcode.</h4>\r\n    <img src={`/api/images/FTUE_S2_P3`} width={550} height={375}></img>\r\n  </div>\r\n);\r\nlet PartSeven = (\r\n  <div>\r\n    <h3>Created Groups Settings (Part 1).</h3>\r\n    <h4>You can access settings for your groups by clicking the gear icon.</h4>\r\n    <img src={`/api/images/FTUE_S3_P1`} width={550} height={375}></img>\r\n  </div>\r\n);\r\nlet PartEight = (\r\n  <div>\r\n    <h3>Created Groups Settings (Part 2).</h3>\r\n    <h4>\r\n      Here you can change the passcode, view/kick members, and delete the group.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S3_P2`} width={450} height={375}></img>\r\n  </div>\r\n);\r\nlet PartNine = (\r\n  <div>\r\n    <h3>Unowned Groups</h3>\r\n    <h4>You can leave groups by clicking the leave icon.</h4>\r\n    <img src={`/api/images/FTUE_S3_P3`} width={550} height={375}></img>\r\n  </div>\r\n);\r\nlet PartTen = (\r\n  <div>\r\n    <h3>Dashboard (Part 1).</h3>\r\n    <h4>\r\n      On your dashboard, select a group from the list of groups you are in.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S4_P1`} width={500} height={375}></img>\r\n  </div>\r\n);\r\nlet PartEleven = (\r\n  <div>\r\n    <h3>Dashboard (Part 2).</h3>\r\n    <h4>Once a group is selected, your items for that group will pop up.</h4>\r\n    <img src={`/api/images/FTUE_S4_P2`} width={550} height={375}></img>\r\n  </div>\r\n);\r\nlet PartTwelve = (\r\n  <div>\r\n    <h3>Dashboard (Part 3).</h3>\r\n    <h4>\r\n      If you just joined/created a group, you can start adding items by clicking\r\n      the add item card.\r\n      <br />\r\n      You will then see a pop up to add an item.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S4_P3`} width={550} height={350}></img>\r\n  </div>\r\n);\r\nlet PartThirteen = (\r\n  <div>\r\n    <h3>Dashboard (Part 4).</h3>\r\n    <h4>\r\n      You can edit any of your items by clicking on them on your dashboard.\r\n      <br />\r\n      You will see a similar pop up from when you added it originally.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S4_P4`} width={550} height={350}></img>\r\n  </div>\r\n);\r\nlet PartFourteen = (\r\n  <div>\r\n    <h3>Dashboard (Part 5).</h3>\r\n    <h4>\r\n      When a group is selected, the side bar allows you to see stats about your\r\n      list, search for an item, and filter items by price range.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S4_P5`} width={200} height={350}></img>\r\n  </div>\r\n);\r\nlet PartFifteen = (\r\n  <div>\r\n    <h3>Group Members and Viewing Member Lists (Part 1).</h3>\r\n    <h4>\r\n      You can view all of the members in a group by clicking the group name\r\n      link.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S5_P1`} width={550} height={350}></img>\r\n  </div>\r\n);\r\nlet PartSixteen = (\r\n  <div>\r\n    <h3>Group Members and Viewing Member Lists (Part 2).</h3>\r\n    <h4>\r\n      You are then taken to this page where you can view and click on members to\r\n      see their items for that group.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S5_P2`} width={550} height={350}></img>\r\n  </div>\r\n);\r\nlet PartSeventeen = (\r\n  <div>\r\n    <h3>Group Members and Viewing Member Lists (Part 3).</h3>\r\n    <h4>\r\n      Once a member is clicked you will be taken to this page to see their items\r\n      for that group.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S5_P3`} width={550} height={350}></img>\r\n  </div>\r\n);\r\nlet PartEighteen = (\r\n  <div>\r\n    <h3>Wedding/Birthday/Shower Lists.</h3>\r\n    <h4>\r\n      Weddings and other special events only contain groups of 1, and allow\r\n      users to purchase items on their page.\r\n      <br />\r\n      Once an item is purchased, it will be set as unavailable to future\r\n      visitors.\r\n    </h4>\r\n    <img src={`/api/images/FTUE_S5_P4`} width={550} height={350}></img>\r\n  </div>\r\n);\r\n\r\n/*---------------------------Part Array-------------------------------*/\r\n//Put each component into an array for navigation between components\r\nexport const PartArray = [\r\n  PartOne,\r\n  PartTwo,\r\n  PartThree,\r\n  PartFour,\r\n  PartFive,\r\n  PartSix,\r\n  PartSeven,\r\n  PartEight,\r\n  PartNine,\r\n  PartTen,\r\n  PartEleven,\r\n  PartTwelve,\r\n  PartThirteen,\r\n  PartFourteen,\r\n  PartFifteen,\r\n  PartSixteen,\r\n  PartSeventeen,\r\n  PartEighteen,\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../../styles/PageStyles/FTUE.css\";\r\nimport { PartArray } from \"../ModalComponents/FTUEModal/TutorialParts\";\r\n/**\r\n * @PageLocation FTUE\r\n * @Component Tutorial\r\n * @Description Modal instructions for step one of the tutorial process\r\n *\r\n */\r\nexport const Tutorial = () => {\r\n  const [part, setPart] = useState(PartArray[0]);\r\n  const [partIndex, setPartIndex] = useState(0);\r\n  const stepChange = (Direction) => {\r\n    if (Direction === \"L\") {\r\n      if (partIndex > 0) {\r\n        setPartIndex(partIndex - 1);\r\n        setPart(PartArray[partIndex - 1]);\r\n      }\r\n    } else {\r\n      if (partIndex < PartArray.length - 1) {\r\n        setPartIndex(partIndex + 1);\r\n        setPart(PartArray[partIndex + 1]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"StepOneContainer\">\r\n        <div className=\"MoveBack\" onClick={() => stepChange(\"L\")}>\r\n          LEFT\r\n        </div>\r\n        <div className=\"FTUEModalContent\">{part}</div>\r\n        <div className=\"MoveForward\" onClick={() => stepChange(\"R\")}>\r\n          RIGHT\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"../styles/PageStyles/FTUE.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { Tutorial } from \"../components/Modals/FTUEModals/Tutorial\";\r\n/**\r\n *\r\n * @Page First time upon login\r\n * @Description First time user experience. Upon first login, give user instructions on how to use the application\r\n *\r\n * @route /welcome\r\n *\r\n */\r\nexport const FTUE = () => {\r\n  return (\r\n    <>\r\n      <div className=\"FTUEContainer\">\r\n        <NavBar title=\"Welcome to Gift Handler\" />\r\n        <div className=\"FTUEBody\">\r\n          <h1> Here is a quick rundown on how to get started</h1>\r\n\r\n          <div className=\"FTUEModalContainer\">\r\n            <Tutorial />\r\n          </div>\r\n          <button>LEFT</button>\r\n          <button>RIGHT</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/PageStyles/SpecialGroupPage.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NavBar from \"../components/Navigation/NavBar\";\r\nimport { RegistryList } from \"../components/Items/RegistryList\";\r\nimport { getItems } from \"../actions/itemActions\";\r\nimport { getUser } from \"../actions/userActions\";\r\nimport { getGroup } from \"../actions/groupActions\";\r\nimport { FilterOtherUsers } from \"../components/Filters/FilterOtherUsers\";\r\nimport { ConfirmationModal } from \"../components/Modals/ConfirmationModal\";\r\n/**\r\n *\r\n * @Page Special Group Page\r\n * @Description Item page for a special group (Wedding/Birthday/etc)\r\n * @route /groups/:GID/event/users/:UID\r\n *\r\n */\r\nexport const SpecialGroupPage = (props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const ActiveModal = useSelector((state) => state.modal.activeModal.modalType);\r\n  const AuthInfo = useSelector((state) => state.auth);\r\n  const PageInfo = useSelector((state) => state.group.pageGroup);\r\n  const [image, setImage] = useState(\"DefaultProfileImage\");\r\n  const dispatch = useDispatch();\r\n  const UID = props.match.params.UID;\r\n  const GID = props.match.params.GID;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let userInfo = await dispatch(getUser(UID));\r\n      setUserName(userInfo[0].name);\r\n      setImage(userInfo[0].profileimage);\r\n      await dispatch(getGroup(GID));\r\n      await dispatch(getItems(UID, GID));\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"EventPageContainer\">\r\n        {ActiveModal === \"Confirm\" && <ConfirmationModal />}\r\n        {AuthInfo.token && <NavBar title=\"Event Page\" />}\r\n        <div className=\"EventPageBody\">\r\n          <FilterOtherUsers />\r\n          <div className=\"EventRegistryWrapper\">\r\n            <div className=\"EventHeader\">\r\n              <div className=\"EventUserInfo\">\r\n                <div className=\"EventUserName\">{userName}</div>\r\n                <div className=\"EventUserImage\">\r\n                  <img\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                    src={`/api/images/${image}`}\r\n                    style={{ borderRadius: \"50%\" }}\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n\r\n              {PageInfo.name && (\r\n                <div className=\"EventName\">{PageInfo.name}</div>\r\n              )}\r\n              {PageInfo.Bio && <>{PageInfo.Bio.description}</>}\r\n            </div>\r\n            <div className=\"EventRegistryList\">\r\n              <RegistryList />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"./Pages/Login\";\r\nimport { Dashboard } from \"./Pages/Dashboard\";\r\nimport \"./App.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { history } from \"./helpers/history\";\r\nimport { GroupPage } from \"./Pages/GroupPage\";\r\nimport PrivateRoute from \"./Routes/PrivateRoute\";\r\nimport { ManageGroup } from \"./Pages/ManageGroup\";\r\nimport { UserGroupPage } from \"./Pages/UserGroupPage\";\r\nimport { ProfilePage } from \"./Pages/ProfilePage\";\r\nimport { PasswordReset } from \"./Pages/PasswordReset\";\r\nimport { FTUE } from \"./Pages/FTUE\";\r\nimport { SpecialGroupPage } from \"./Pages/SpecialGroupPage\";\r\nfunction App() {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  return (\r\n    <>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n\r\n          <Route\r\n            path=\"/groups/:GID/event/users/:UID\"\r\n            component={SpecialGroupPage}\r\n          />\r\n          <Route\r\n            path=\"/groups/:gid/users/:id\"\r\n            exact\r\n            component={UserGroupPage}\r\n          />\r\n          <Route path=\"/groups/:id\" component={GroupPage} />\r\n          <Route path=\"/passwordReset/:id\" component={PasswordReset} />\r\n\r\n          <PrivateRoute\r\n            path=\"/welcome\"\r\n            isAuthenticated={isAuthenticated}\r\n            component={FTUE}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/managegroups\"\r\n            isAuthenticated={isAuthenticated}\r\n            component={ManageGroup}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/profile\"\r\n            isAuthenticated={isAuthenticated}\r\n            component={ProfilePage}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/\"\r\n            isAuthenticated={isAuthenticated}\r\n            component={Dashboard}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  message: null,\r\n  status: null,\r\n  id: null,\r\n};\r\n\r\nexport default function errorReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        message: action.payload.message,\r\n        status: action.payload.status,\r\n        id: action.payload.id,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        message: null,\r\n        status: null,\r\n        id: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  UPDATE_USER,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: {\r\n    name: \"\",\r\n  },\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_USERS_GROUPS,\r\n  ADD_GROUP,\r\n  GET_GROUP,\r\n  SELECT_EDIT_GROUP,\r\n  UNSELECT_EDIT_GROUP,\r\n  DELETE_GROUP,\r\n  LEAVE_GROUP,\r\n  USER_GROUPS_LOADING,\r\n  REMOVE_GROUP_MEMBER,\r\n  GROUP_LOADING,\r\n  ADD_GROUP_MEMBER,\r\n  GET_GROUP_MEMBERS,\r\n  GROUP_MEMBERS_LOADING,\r\n  SET_ACTIVE_GROUP,\r\n  ASSIGN_PARTNERS,\r\n  CLEAR_CURRENT_GROUP,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  groups: null,\r\n  currentGroup: {\r\n    Group: {\r\n      id: null,\r\n      name: null,\r\n      groupname: null,\r\n      role: null,\r\n    },\r\n  },\r\n  selectedGroup: {\r\n    displayEditGroupModal: false,\r\n    groupDetails: null,\r\n    groupMembers: null,\r\n  },\r\n  pageGroup: [],\r\n  loading: false,\r\n};\r\n\r\nexport default function groupReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USERS_GROUPS:\r\n      return {\r\n        ...state,\r\n        groups: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_GROUP:\r\n      return {\r\n        ...state,\r\n        pageGroup: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_GROUP_MEMBERS:\r\n      return {\r\n        ...state,\r\n        selectedGroup: {\r\n          displayEditGroupModal: state.selectedGroup.displayEditGroupModal,\r\n          groupDetails: { ...state.selectedGroup.groupDetails },\r\n          groupMembers: action.payload,\r\n        },\r\n        loading: false,\r\n      };\r\n    case SET_ACTIVE_GROUP:\r\n      return {\r\n        ...state,\r\n        currentGroup: action.payload,\r\n      };\r\n    case SELECT_EDIT_GROUP:\r\n    case UNSELECT_EDIT_GROUP:\r\n      return {\r\n        ...state,\r\n        selectedGroup: action.payload,\r\n      };\r\n    case REMOVE_GROUP_MEMBER:\r\n      return {\r\n        ...state,\r\n        selectedGroup: {\r\n          displayEditGroupModal: state.selectedGroup.displayEditGroupModal,\r\n          groupDetails: { ...state.selectedGroup.groupDetails },\r\n          groupMembers: state.selectedGroup.groupMembers.filter(\r\n            (user) => user.id !== action.payload\r\n          ),\r\n        },\r\n      };\r\n\r\n    case CLEAR_CURRENT_GROUP:\r\n      return {\r\n        ...state,\r\n        currentGroup: action.payload,\r\n      };\r\n    case LEAVE_GROUP:\r\n      return {\r\n        ...state,\r\n        groups: state.groups.filter((group) => group.id !== action.payload),\r\n      };\r\n    case DELETE_GROUP:\r\n      return {\r\n        ...state,\r\n        groups: state.groups.filter((group) => group.id !== action.payload),\r\n      };\r\n    case ADD_GROUP:\r\n      return {\r\n        ...state,\r\n        groups: [action.payload, ...state.groups],\r\n      };\r\n    case ADD_GROUP_MEMBER:\r\n      return {\r\n        ...state,\r\n        groups: [action.payload, ...state.groups],\r\n      };\r\n\r\n    case GROUP_LOADING:\r\n    case USER_GROUPS_LOADING:\r\n    case GROUP_MEMBERS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_ITEMS,\r\n  ADD_ITEM,\r\n  ADD_IMAGE,\r\n  DELETE_ITEM,\r\n  EDIT_ITEM,\r\n  SELECT_EDIT_ITEM,\r\n  UNSELECT_EDIT_ITEM,\r\n  ITEMS_LOADING,\r\n  FILTER_ITEM,\r\n  SET_FILTER_ITEM,\r\n  CLEAR_FILTER_ITEMS,\r\n  CLEAR_ITEMS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  filteredItems: null,\r\n  memberItems: null,\r\n  selectedItem: {\r\n    displayEditModal: false,\r\n    itemDetails: null,\r\n  },\r\n  loading: false,\r\n};\r\n\r\nexport default function itemReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        memberItems: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        memberItems: [...state.memberItems, action.payload],\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_IMAGE:\r\n      return {\r\n        ...state,\r\n        image: action.payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        memberItems: state.memberItems.filter(\r\n          (item) => item.itemid !== action.payload\r\n        ),\r\n      };\r\n    case SET_FILTER_ITEM:\r\n      return {\r\n        ...state,\r\n        filteredItems: [action.payload],\r\n      };\r\n    case CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        memberItems: null,\r\n      };\r\n    case CLEAR_FILTER_ITEMS:\r\n      return {\r\n        ...state,\r\n        filteredItems: null,\r\n      };\r\n    case FILTER_ITEM:\r\n      let lowPriceFilter;\r\n      let highPriceFilter;\r\n      let filteredItems;\r\n\r\n      //If the less than filter is set, convert to a number\r\n      if (action.payload.FilterParam.LowerThan) {\r\n        lowPriceFilter = Number(\r\n          action.payload.FilterParam.LowerThan.substring(1)\r\n        );\r\n      }\r\n\r\n      //If the more than filter is set, convert to a number\r\n      if (action.payload.FilterParam.MoreThan) {\r\n        highPriceFilter = Number(\r\n          action.payload.FilterParam.MoreThan.substring(1)\r\n        );\r\n      }\r\n\r\n      //Filter items based on filter parameters set. Convert item prices to numbers\r\n      if (lowPriceFilter && highPriceFilter) {\r\n        filteredItems = state.memberItems.filter(\r\n          (item) =>\r\n            Number(item.price.replace(/[^0-9\\.]+/g, \"\")) < lowPriceFilter &&\r\n            Number(item.price.replace(/[^0-9\\.]+/g, \"\")) > highPriceFilter\r\n        );\r\n      } else if (lowPriceFilter) {\r\n        filteredItems = state.memberItems.filter(\r\n          (item) =>\r\n            Number(item.price.replace(/[^0-9\\.]+/g, \"\")) < lowPriceFilter\r\n        );\r\n      } else if (highPriceFilter) {\r\n        filteredItems = state.memberItems.filter(\r\n          (item) =>\r\n            Number(item.price.replace(/[^0-9\\.]+/g, \"\")) > highPriceFilter\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        filteredItems: filteredItems,\r\n      };\r\n    case EDIT_ITEM:\r\n      let arr = state.memberItems;\r\n      const idx = state.memberItems.findIndex(\r\n        (x) => x.itemid === action.payload.payload.itemid\r\n      );\r\n      arr[idx] = action.payload.payload;\r\n      return {\r\n        ...state,\r\n        selectedItem: action.payload,\r\n        memberItems: arr,\r\n      };\r\n    case SELECT_EDIT_ITEM:\r\n    case UNSELECT_EDIT_ITEM:\r\n      return {\r\n        ...state,\r\n        selectedItem: action.payload,\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_EXT_USER,\r\n  EXT_USER_LOADING,\r\n  UPDATE_EXT_USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  externalUser: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function itemReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_EXT_USER:\r\n      return {\r\n        ...state,\r\n        externalUser: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case EXT_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case UPDATE_EXT_USER:\r\n      return {\r\n        ...state,\r\n        externalUser: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ACTIVE_MODAL,\r\n  SET_MODAL_PAGE,\r\n  UPDATE_MODAL_DATA,\r\n  DEACTIVATE_MODAL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  activeModal: {\r\n    modalType: null,\r\n    activePage: null,\r\n  },\r\n  modalData: null,\r\n};\r\n\r\nexport default function modalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_MODAL:\r\n      return {\r\n        ...state,\r\n        activeModal: action.payload,\r\n      };\r\n    case SET_MODAL_PAGE:\r\n      return {\r\n        ...state,\r\n        activeModal: {\r\n          activePage: action.payload,\r\n          modalType: state.activeModal.modalType,\r\n        },\r\n      };\r\n    case DEACTIVATE_MODAL:\r\n      return {\r\n        ...state,\r\n        activeModal: \"Main\",\r\n        modalData: null,\r\n      };\r\n    case UPDATE_MODAL_DATA:\r\n      return {\r\n        ...state,\r\n        modalData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport groupReducer from \"./groupReducer\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport modalReducer from \"./modalReducer\";\r\nexport default combineReducers({\r\n  error: errorReducer,\r\n  auth: authReducer,\r\n  group: groupReducer,\r\n  item: itemReducer,\r\n  user: userReducer,\r\n  modal: modalReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}